{
  "metadata": {
    "reportId": "report-1759242745028-2amppewtb",
    "generatedAt": "2025-09-30T14:32:32.043Z",
    "version": "2.0.0",
    "reportType": "comprehensive",
    "generator": "EnhancedTestLogger"
  },
  "executiveSummary": {
    "overallStatus": "failed",
    "totalSuites": 0,
    "totalTests": 103,
    "successRate": 80.58252427184466,
    "criticalIssues": 5,
    "keyMetrics": {
      "averageDuration": 1159.7184466019417,
      "memoryPeak": 166826264,
      "flakyTests": 0
    },
    "qualityGate": "failed"
  },
  "testInventory": {
    "suites": [],
    "categories": {
      "unit": 103,
      "integration": 0,
      "e2e": 0,
      "system": 0,
      "regression": 0,
      "acceptance": 0,
      "performance": 0,
      "load": 0,
      "security": 0,
      "compatibility": 0,
      "accessibility": 0,
      "exploratory": 0
    },
    "priorities": {
      "critical": 0,
      "high": 1,
      "medium": 100,
      "low": 2
    },
    "environments": [
      "test"
    ]
  },
  "detailedResults": {
    "failures": [
      {
        "metadata": {
          "testId": "Crm Service Registry::should throw error for invalid provider configuration::1759242751897",
          "testName": "should throw error for invalid provider configuration",
          "testDescription": "should throw error for invalid provider configuration",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165126896,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286732288
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.expect (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:108:13)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nReceived promise resolved instead of rejected\nResolved to value: \u001b[31mundefined\u001b[39m\n    at expect (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\expect\\build\\index.js:113:15)\n    at Object.expect (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:108:13)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should throw error for invalid provider configuration",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mrejects\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should get all services::1759242751904",
          "testName": "should get all services",
          "testDescription": "should get all services",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165188256,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m2\u001b[39m\nReceived array:  \u001b[31m[{\"assessDataQuality\": [Function assessDataQuality], \"authenticate\": [Function authenticate], \"authenticateApiKey\": [Function authenticateApiKey], \"authenticateBasic\": [Function authenticateBasic], \"authenticateCustom\": [Function authenticateCustom], \"authenticateOAuth2\": [Function authenticateOAuth2], \"calculateSyncMetrics\": [Function calculateSyncMetrics], \"checkForDuplicates\": [Function checkForDuplicates], \"createSyncRecord\": [Function createSyncRecord], \"extractRecordId\": [Function extractRecordId], \"findEndpoint\": [Function findEndpoint], \"formatPhoneNumber\": [Function formatPhoneNumber], \"getConfiguration\": [Function getConfiguration], \"getNestedValue\": [Function getNestedValue], \"getProvider\": [Function getProvider], \"handleError\": [Function handleError], \"handleRecordDeletion\": [Function handleRecordDeletion], \"handleRecordUpdate\": [Function handleRecordUpdate], \"handleWebhookEvent\": [Function handleWebhookEvent], \"initialize\": [Function initialize], \"isReady\": [Function isReady], \"makeCustomApiCall\": [Function makeCustomApiCall], \"mapBusinessRecordToCustomFormat\": [Function mapBusinessRecordToCustomFormat], \"mapBusinessRecordToTarget\": [Function mapBusinessRecordToTarget], \"mapCustomRecordsToBusinessRecords\": [Function mapCustomRecordsToBusinessRecords], \"processBatch\": [Function processBatch], \"processBatchSync\": [Function processBatchSync], \"processTemplate\": [Function processTemplate], \"pullUpdates\": [Function pullUpdates], \"respectRateLimit\": [Function respectRateLimit], \"setupWebhooks\": [Function setupWebhooks], \"syncBusinessRecord\": [Function syncBusinessRecord], \"syncBusinessRecords\": [Function syncBusinessRecords], \"transformValue\": [Function transformValue], \"validateBusinessRecord\": [Function validateBusinessRecord], \"validateConnection\": [Function validateConnection], \"validateWebhookSignature\": [Function validateWebhookSignature]}, {\"assessDataQuality\": [Function assessDataQuality], \"authenticate\": [Function authenticate], \"authenticateApiKey\": [Function authenticateApiKey], \"authenticateBasic\": [Function authenticateBasic], \"authenticateCustom\": [Function authenticateCustom], \"authenticateOAuth2\": [Function authenticateOAuth2], \"calculateSyncMetrics\": [Function calculateSyncMetrics], \"checkForDuplicates\": [Function checkForDuplicates], \"createSyncRecord\": [Function createSyncRecord], \"extractRecordId\": [Function extractRecordId], \"findEndpoint\": [Function findEndpoint], \"formatPhoneNumber\": [Function formatPhoneNumber], \"getConfiguration\": [Function getConfiguration], \"getNestedValue\": [Function getNestedValue], \"getProvider\": [Function getProvider], \"handleError\": [Function handleError], \"handleRecordDeletion\": [Function handleRecordDeletion], \"handleRecordUpdate\": [Function handleRecordUpdate], \"handleWebhookEvent\": [Function handleWebhookEvent], \"initialize\": [Function initialize], \"isReady\": [Function isReady], \"makeCustomApiCall\": [Function makeCustomApiCall], \"mapBusinessRecordToCustomFormat\": [Function mapBusinessRecordToCustomFormat], \"mapBusinessRecordToTarget\": [Function mapBusinessRecordToTarget], \"mapCustomRecordsToBusinessRecords\": [Function mapCustomRecordsToBusinessRecords], \"processBatch\": [Function processBatch], \"processBatchSync\": [Function processBatchSync], \"processTemplate\": [Function processTemplate], \"pullUpdates\": [Function pullUpdates], \"respectRateLimit\": [Function respectRateLimit], \"setupWebhooks\": [Function setupWebhooks], \"syncBusinessRecord\": [Function syncBusinessRecord], \"syncBusinessRecords\": [Function syncBusinessRecords], \"transformValue\": [Function transformValue], \"validateBusinessRecord\": [Function validateBusinessRecord], \"validateConnection\": [Function validateConnection], \"validateWebhookSignature\": [Function validateWebhookSignature]}]\u001b[39m\n    at Object.toHaveLength (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:160:24)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m1\u001b[39m\nReceived length: \u001b[31m2\u001b[39m\nReceived array:  \u001b[31m[{\"assessDataQuality\": [Function assessDataQuality], \"authenticate\": [Function authenticate], \"authenticateApiKey\": [Function authenticateApiKey], \"authenticateBasic\": [Function authenticateBasic], \"authenticateCustom\": [Function authenticateCustom], \"authenticateOAuth2\": [Function authenticateOAuth2], \"calculateSyncMetrics\": [Function calculateSyncMetrics], \"checkForDuplicates\": [Function checkForDuplicates], \"createSyncRecord\": [Function createSyncRecord], \"extractRecordId\": [Function extractRecordId], \"findEndpoint\": [Function findEndpoint], \"formatPhoneNumber\": [Function formatPhoneNumber], \"getConfiguration\": [Function getConfiguration], \"getNestedValue\": [Function getNestedValue], \"getProvider\": [Function getProvider], \"handleError\": [Function handleError], \"handleRecordDeletion\": [Function handleRecordDeletion], \"handleRecordUpdate\": [Function handleRecordUpdate], \"handleWebhookEvent\": [Function handleWebhookEvent], \"initialize\": [Function initialize], \"isReady\": [Function isReady], \"makeCustomApiCall\": [Function makeCustomApiCall], \"mapBusinessRecordToCustomFormat\": [Function mapBusinessRecordToCustomFormat], \"mapBusinessRecordToTarget\": [Function mapBusinessRecordToTarget], \"mapCustomRecordsToBusinessRecords\": [Function mapCustomRecordsToBusinessRecords], \"processBatch\": [Function processBatch], \"processBatchSync\": [Function processBatchSync], \"processTemplate\": [Function processTemplate], \"pullUpdates\": [Function pullUpdates], \"respectRateLimit\": [Function respectRateLimit], \"setupWebhooks\": [Function setupWebhooks], \"syncBusinessRecord\": [Function syncBusinessRecord], \"syncBusinessRecords\": [Function syncBusinessRecords], \"transformValue\": [Function transformValue], \"validateBusinessRecord\": [Function validateBusinessRecord], \"validateConnection\": [Function validateConnection], \"validateWebhookSignature\": [Function validateWebhookSignature]}, {\"assessDataQuality\": [Function assessDataQuality], \"authenticate\": [Function authenticate], \"authenticateApiKey\": [Function authenticateApiKey], \"authenticateBasic\": [Function authenticateBasic], \"authenticateCustom\": [Function authenticateCustom], \"authenticateOAuth2\": [Function authenticateOAuth2], \"calculateSyncMetrics\": [Function calculateSyncMetrics], \"checkForDuplicates\": [Function checkForDuplicates], \"createSyncRecord\": [Function createSyncRecord], \"extractRecordId\": [Function extractRecordId], \"findEndpoint\": [Function findEndpoint], \"formatPhoneNumber\": [Function formatPhoneNumber], \"getConfiguration\": [Function getConfiguration], \"getNestedValue\": [Function getNestedValue], \"getProvider\": [Function getProvider], \"handleError\": [Function handleError], \"handleRecordDeletion\": [Function handleRecordDeletion], \"handleRecordUpdate\": [Function handleRecordUpdate], \"handleWebhookEvent\": [Function handleWebhookEvent], \"initialize\": [Function initialize], \"isReady\": [Function isReady], \"makeCustomApiCall\": [Function makeCustomApiCall], \"mapBusinessRecordToCustomFormat\": [Function mapBusinessRecordToCustomFormat], \"mapBusinessRecordToTarget\": [Function mapBusinessRecordToTarget], \"mapCustomRecordsToBusinessRecords\": [Function mapCustomRecordsToBusinessRecords], \"processBatch\": [Function processBatch], \"processBatchSync\": [Function processBatchSync], \"processTemplate\": [Function processTemplate], \"pullUpdates\": [Function pullUpdates], \"respectRateLimit\": [Function respectRateLimit], \"setupWebhooks\": [Function setupWebhooks], \"syncBusinessRecord\": [Function syncBusinessRecord], \"syncBusinessRecords\": [Function syncBusinessRecords], \"transformValue\": [Function transformValue], \"validateBusinessRecord\": [Function validateBusinessRecord], \"validateConnection\": [Function validateConnection], \"validateWebhookSignature\": [Function validateWebhookSignature]}]\u001b[39m\n    at Object.toHaveLength (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:160:24)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should get all services",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should get active services only::1759242751909",
          "testName": "should get active services only",
          "testDescription": "should get active services only",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165244280,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:164:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:164:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "async",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should get active services only",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'isActive')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should filter services by type::1759242751912",
          "testName": "should filter services by type",
          "testDescription": "should filter services by type",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165265976,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'type')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getServicesByType] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:47)\n    at Object.getServicesByType (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:171:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'type')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getServicesByType] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:47)\n    at Object.getServicesByType (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:171:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "async",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should filter services by type",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'type')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should return empty array for inactive services when provider is inactive::1759242751915",
          "testName": "should return empty array for inactive services when provider is inactive",
          "testDescription": "should return empty array for inactive services when provider is inactive",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165288112,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:183:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:183:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "type": "unknown",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should return empty array for inactive services when provider is inactive",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'isActive')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should test connections for all providers::1759242751918",
          "testName": "should test connections for all providers",
          "testDescription": "should test connections for all providers",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165303712,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at CRMServiceRegistry.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:206:30)\n    at Object.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:211:38)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at CRMServiceRegistry.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:206:30)\n    at Object.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:211:38)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "async",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should test connections for all providers",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'isActive')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should return correct statistics for empty registry::1759242751921",
          "testName": "should return correct statistics for empty registry",
          "testDescription": "should return correct statistics for empty registry",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165332984,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:236:36)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m2\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:236:36)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should return correct statistics for empty registry",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should handle service creation failures gracefully::1759242751926",
          "testName": "should handle service creation failures gracefully",
          "testDescription": "should handle service creation failures gracefully",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165359872,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeUndefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m{\"assessDataQuality\": [Function assessDataQuality], \"authenticate\": [Function authenticate], \"authenticateApiKey\": [Function authenticateApiKey], \"authenticateBasic\": [Function authenticateBasic], \"authenticateCustom\": [Function authenticateCustom], \"authenticateOAuth2\": [Function authenticateOAuth2], \"calculateSyncMetrics\": [Function calculateSyncMetrics], \"checkForDuplicates\": [Function checkForDuplicates], \"createSyncRecord\": [Function createSyncRecord], \"extractRecordId\": [Function extractRecordId], \"findEndpoint\": [Function findEndpoint], \"formatPhoneNumber\": [Function formatPhoneNumber], \"getConfiguration\": [Function getConfiguration], \"getNestedValue\": [Function getNestedValue], \"getProvider\": [Function getProvider], \"handleError\": [Function handleError], \"handleRecordDeletion\": [Function handleRecordDeletion], \"handleRecordUpdate\": [Function handleRecordUpdate], \"handleWebhookEvent\": [Function handleWebhookEvent], \"initialize\": [Function initialize], \"isReady\": [Function isReady], \"makeCustomApiCall\": [Function makeCustomApiCall], \"mapBusinessRecordToCustomFormat\": [Function mapBusinessRecordToCustomFormat], \"mapBusinessRecordToTarget\": [Function mapBusinessRecordToTarget], \"mapCustomRecordsToBusinessRecords\": [Function mapCustomRecordsToBusinessRecords], \"processBatch\": [Function processBatch], \"processBatchSync\": [Function processBatchSync], \"processTemplate\": [Function processTemplate], \"pullUpdates\": [Function pullUpdates], \"respectRateLimit\": [Function respectRateLimit], \"setupWebhooks\": [Function setupWebhooks], \"syncBusinessRecord\": [Function syncBusinessRecord], \"syncBusinessRecords\": [Function syncBusinessRecords], \"transformValue\": [Function transformValue], \"validateBusinessRecord\": [Function validateBusinessRecord], \"validateConnection\": [Function validateConnection], \"validateWebhookSignature\": [Function validateWebhookSignature]}\u001b[39m\n    at Object.toBeUndefined (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:276:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeUndefined\u001b[2m()\u001b[22m\n\nReceived: \u001b[31m{\"assessDataQuality\": [Function assessDataQuality], \"authenticate\": [Function authenticate], \"authenticateApiKey\": [Function authenticateApiKey], \"authenticateBasic\": [Function authenticateBasic], \"authenticateCustom\": [Function authenticateCustom], \"authenticateOAuth2\": [Function authenticateOAuth2], \"calculateSyncMetrics\": [Function calculateSyncMetrics], \"checkForDuplicates\": [Function checkForDuplicates], \"createSyncRecord\": [Function createSyncRecord], \"extractRecordId\": [Function extractRecordId], \"findEndpoint\": [Function findEndpoint], \"formatPhoneNumber\": [Function formatPhoneNumber], \"getConfiguration\": [Function getConfiguration], \"getNestedValue\": [Function getNestedValue], \"getProvider\": [Function getProvider], \"handleError\": [Function handleError], \"handleRecordDeletion\": [Function handleRecordDeletion], \"handleRecordUpdate\": [Function handleRecordUpdate], \"handleWebhookEvent\": [Function handleWebhookEvent], \"initialize\": [Function initialize], \"isReady\": [Function isReady], \"makeCustomApiCall\": [Function makeCustomApiCall], \"mapBusinessRecordToCustomFormat\": [Function mapBusinessRecordToCustomFormat], \"mapBusinessRecordToTarget\": [Function mapBusinessRecordToTarget], \"mapCustomRecordsToBusinessRecords\": [Function mapCustomRecordsToBusinessRecords], \"processBatch\": [Function processBatch], \"processBatchSync\": [Function processBatchSync], \"processTemplate\": [Function processTemplate], \"pullUpdates\": [Function pullUpdates], \"respectRateLimit\": [Function respectRateLimit], \"setupWebhooks\": [Function setupWebhooks], \"syncBusinessRecord\": [Function syncBusinessRecord], \"syncBusinessRecords\": [Function syncBusinessRecords], \"transformValue\": [Function transformValue], \"validateBusinessRecord\": [Function validateBusinessRecord], \"validateConnection\": [Function validateConnection], \"validateWebhookSignature\": [Function validateWebhookSignature]}\u001b[39m\n    at Object.toBeUndefined (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:276:23)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should handle service creation failures gracefully",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeUndefined\u001b[2m()\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should maintain registry state consistency::1759242751931",
          "testName": "should maintain registry state consistency",
          "testDescription": "should maintain registry state consistency",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165390280,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m3\u001b[39m\nReceived length: \u001b[31m4\u001b[39m\nReceived array:  \u001b[31m[{\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"test-provider-2\", \"isActive\": false, \"name\": \"Test CRM Provider\", \"type\": \"salesforce\", \"version\": \"1.0.0\"}, {\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"test-provider-1\", \"isActive\": true, \"name\": \"Test CRM Provider\", \"type\": \"custom\", \"version\": \"1.0.0\"}, {\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"provider-2\", \"isActive\": true, \"name\": \"Test CRM Provider\", \"type\": \"hubspot\", \"version\": \"1.0.0\"}, {\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"provider-3\", \"isActive\": true, \"name\": \"Test CRM Provider\", \"type\": \"pipedrive\", \"version\": \"1.0.0\"}]\u001b[39m\n    at Object.toHaveLength (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:326:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected length: \u001b[32m3\u001b[39m\nReceived length: \u001b[31m4\u001b[39m\nReceived array:  \u001b[31m[{\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"test-provider-2\", \"isActive\": false, \"name\": \"Test CRM Provider\", \"type\": \"salesforce\", \"version\": \"1.0.0\"}, {\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"test-provider-1\", \"isActive\": true, \"name\": \"Test CRM Provider\", \"type\": \"custom\", \"version\": \"1.0.0\"}, {\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"provider-2\", \"isActive\": true, \"name\": \"Test CRM Provider\", \"type\": \"hubspot\", \"version\": \"1.0.0\"}, {\"capabilities\": {\"bidirectionalSync\": true, \"bulkOperations\": true, \"customFields\": false, \"deduplication\": true, \"realTimeUpdates\": false, \"validation\": true, \"webhookSupport\": false}, \"configuration\": {\"apiEndpoint\": \"https://api.test-crm.com\", \"authentication\": {\"credentials\": {\"apiKey\": \"test-api-key\"}, \"type\": \"api_key\"}, \"fieldMappings\": [{\"dataType\": \"string\", \"required\": true, \"sourceField\": \"businessName\", \"targetField\": \"name\"}], \"rateLimits\": {\"burstLimit\": 10, \"requestsPerDay\": 10000, \"requestsPerHour\": 1000, \"requestsPerMinute\": 60}, \"syncSettings\": {\"batchSize\": 10, \"conflictResolution\": \"source_wins\", \"direction\": \"bidirectional\", \"enableDeduplication\": true, \"enableValidation\": true, \"frequency\": \"realtime\"}}, \"id\": \"provider-3\", \"isActive\": true, \"name\": \"Test CRM Provider\", \"type\": \"pipedrive\", \"version\": \"1.0.0\"}]\u001b[39m\n    at Object.toHaveLength (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:326:42)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should maintain registry state consistency",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoHaveLength\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Csp::should replace nonce placeholders with actual nonce::1759242751940",
          "testName": "should replace nonce placeholders with actual nonce",
          "testDescription": "should replace nonce placeholders with actual nonce",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts",
          "relativePath": "src\\__tests__\\csp.test.ts",
          "suite": "Csp",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242746880,
          "endTime": 1759242747167,
          "duration": 287,
          "memoryUsage": {
            "heapUsed": 165582464,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"'nonce-test-nonce-123'\"\u001b[39m\nReceived string:    \u001b[31m\"default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://js.stripe.com https://vercel.live; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' ws://localhost:* http://localhost:* https://nominatim.openstreetmap.org https://api.opencagedata.com https://*.googleapis.com https://*.cognitiveservices.azure.com https://api.duckduckgo.com https://duckduckgo.com https://api.stripe.com https://checkout.stripe.com https://js.stripe.com; object-src 'none'; media-src 'self'; frame-src 'self' https://js.stripe.com https://hooks.stripe.com https://checkout.stripe.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; worker-src 'self' blob:; manifest-src 'self'; child-src 'self'; report-uri /api/csp-report\"\u001b[39m\n    at Object.toContain (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:69:22)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"'nonce-test-nonce-123'\"\u001b[39m\nReceived string:    \u001b[31m\"default-src 'self'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://js.stripe.com https://vercel.live; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' ws://localhost:* http://localhost:* https://nominatim.openstreetmap.org https://api.opencagedata.com https://*.googleapis.com https://*.cognitiveservices.azure.com https://api.duckduckgo.com https://duckduckgo.com https://api.stripe.com https://checkout.stripe.com https://js.stripe.com; object-src 'none'; media-src 'self'; frame-src 'self' https://js.stripe.com https://hooks.stripe.com https://checkout.stripe.com; frame-ancestors 'none'; base-uri 'self'; form-action 'self'; worker-src 'self' blob:; manifest-src 'self'; child-src 'self'; report-uri /api/csp-report\"\u001b[39m\n    at Object.toContain (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:69:22)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should replace nonce placeholders with actual nonce",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Csp::should log CSP violation without throwing::1759242751946",
          "testName": "should log CSP violation without throwing",
          "testDescription": "should log CSP violation without throwing",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts",
          "relativePath": "src\\__tests__\\csp.test.ts",
          "suite": "Csp",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242746880,
          "endTime": 1759242747167,
          "duration": 287,
          "memoryUsage": {
            "heapUsed": 165681888,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286867456
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TypeError\"\u001b[39m\nError message: \u001b[31m\"text.replace is not a function\"\u001b[39m\n\n    \u001b[0m \u001b[90m 694 |\u001b[39m   \u001b[36mprivate\u001b[39m stripAnsiCodes(text\u001b[33m:\u001b[39m string)\u001b[33m:\u001b[39m string {\n     \u001b[90m 695 |\u001b[39m     \u001b[90m// Remove ANSI escape sequences\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 696 |\u001b[39m     \u001b[36mreturn\u001b[39m text\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*m/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*[a-zA-Z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 697 |\u001b[39m   }\n     \u001b[90m 698 |\u001b[39m }\n     \u001b[90m 699 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Logger.replace [as stripAnsiCodes] (\u001b[22msrc/utils/logger.ts\u001b[2m:696:17)\u001b[22m\n      \u001b[2mat Logger.stripAnsiCodes [as logToConsoleText] (\u001b[22msrc/utils/logger.ts\u001b[2m:280:31)\u001b[22m\n      \u001b[2mat Logger.logToConsoleText [as logToConsole] (\u001b[22msrc/utils/logger.ts\u001b[2m:266:12)\u001b[22m\n      \u001b[2mat Logger.logToConsole [as log] (\u001b[22msrc/utils/logger.ts\u001b[2m:244:12)\u001b[22m\n      \u001b[2mat Logger.log [as warn] (\u001b[22msrc/utils/logger.ts\u001b[2m:176:10)\u001b[22m\n      \u001b[2mat warn (\u001b[22msrc/lib/cspConfig.ts\u001b[2m:392:10)\u001b[22m\n      \u001b[2mat \u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:35\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/expect/build/toThrowMatchers.js\u001b[2m:74:11)\u001b[22m\n      \u001b[2mat Object.throwingMatcher [as toThrow] (\u001b[22mnode_modules/expect/build/index.js\u001b[2m:320:21)\u001b[22m\n      \u001b[2mat Object.toThrow (\u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:53)\u001b[22m\n    at Object.toThrow (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:228:53)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TypeError\"\u001b[39m\nError message: \u001b[31m\"text.replace is not a function\"\u001b[39m\n\n    \u001b[0m \u001b[90m 694 |\u001b[39m   \u001b[36mprivate\u001b[39m stripAnsiCodes(text\u001b[33m:\u001b[39m string)\u001b[33m:\u001b[39m string {\n     \u001b[90m 695 |\u001b[39m     \u001b[90m// Remove ANSI escape sequences\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 696 |\u001b[39m     \u001b[36mreturn\u001b[39m text\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*m/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*[a-zA-Z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 697 |\u001b[39m   }\n     \u001b[90m 698 |\u001b[39m }\n     \u001b[90m 699 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Logger.replace [as stripAnsiCodes] (\u001b[22msrc/utils/logger.ts\u001b[2m:696:17)\u001b[22m\n      \u001b[2mat Logger.stripAnsiCodes [as logToConsoleText] (\u001b[22msrc/utils/logger.ts\u001b[2m:280:31)\u001b[22m\n      \u001b[2mat Logger.logToConsoleText [as logToConsole] (\u001b[22msrc/utils/logger.ts\u001b[2m:266:12)\u001b[22m\n      \u001b[2mat Logger.logToConsole [as log] (\u001b[22msrc/utils/logger.ts\u001b[2m:244:12)\u001b[22m\n      \u001b[2mat Logger.log [as warn] (\u001b[22msrc/utils/logger.ts\u001b[2m:176:10)\u001b[22m\n      \u001b[2mat warn (\u001b[22msrc/lib/cspConfig.ts\u001b[2m:392:10)\u001b[22m\n      \u001b[2mat \u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:35\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/expect/build/toThrowMatchers.js\u001b[2m:74:11)\u001b[22m\n      \u001b[2mat Object.throwingMatcher [as toThrow] (\u001b[22mnode_modules/expect/build/index.js\u001b[2m:320:21)\u001b[22m\n      \u001b[2mat Object.toThrow (\u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:53)\u001b[22m\n    at Object.toThrow (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:228:53)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should log CSP violation without throwing",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Csp-compliance::should set development CSP headers correctly::1759242751960",
          "testName": "should set development CSP headers correctly",
          "testDescription": "should set development CSP headers correctly",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts",
          "relativePath": "src\\__tests__\\csp-compliance.test.ts",
          "suite": "Csp-compliance",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242747634,
          "endTime": 1759242748151,
          "duration": 517,
          "memoryUsage": {
            "heapUsed": 166022240,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286867456
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: Hooks cannot be defined inside tests. Hook of type \"beforeEach\" is nested within \"should set development CSP headers correctly\".\n    at eventHandler (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\eventHandler.js:97:11)\n    at dispatchSync (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\state.js:73:5)\n    at _addHook (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:116:27)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:127:3)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\utils\\mockTypeHelpers.ts:431:3)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:91:37)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: Hooks cannot be defined inside tests. Hook of type \"beforeEach\" is nested within \"should set development CSP headers correctly\".\n    at eventHandler (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\eventHandler.js:97:11)\n    at dispatchSync (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\state.js:73:5)\n    at _addHook (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:116:27)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:127:3)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\utils\\mockTypeHelpers.ts:431:3)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:91:37)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)\nError: Hooks cannot be defined inside tests. Hook of type \"afterEach\" is nested within \"should set development CSP headers correctly\".\n    at eventHandler (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\eventHandler.js:97:11)\n    at dispatchSync (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\state.js:73:5)\n    at _addHook (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:116:27)\n    at afterEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:133:3)\n    at afterEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\utils\\mockTypeHelpers.ts:439:3)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:91:37)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)\nTypeError: crypto.randomUUID is not a function\n    at SecurityMonitoringService.randomUUID [as logSecurityEvent] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\securityMonitoring.ts:155:18)\n    at SecurityMonitoringService.logSecurityEvent [as checkRequestPattern] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\securityMonitoring.ts:319:12)\n    at SecurityMonitoringService.checkRequestPattern [as analyzeRequest] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\securityMonitoring.ts:239:10)\n    at analyzeRequest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\middleware.ts:403:45)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:100:24)",
          "type": "mock",
          "severity": "low",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should set development CSP headers correctly",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: Hooks cannot be defined inside tests. Hook of type \"beforeEach\" is nested within \"should set development CSP headers correctly\"."
        }
      },
      {
        "metadata": {
          "testId": "Csp-compliance::should set production CSP headers correctly::1759242751969",
          "testName": "should set production CSP headers correctly",
          "testDescription": "should set production CSP headers correctly",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts",
          "relativePath": "src\\__tests__\\csp-compliance.test.ts",
          "suite": "Csp-compliance",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242747634,
          "endTime": 1759242748151,
          "duration": 517,
          "memoryUsage": {
            "heapUsed": 166072600,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286867456
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: Hooks cannot be defined inside tests. Hook of type \"beforeEach\" is nested within \"should set production CSP headers correctly\".\n    at eventHandler (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\eventHandler.js:97:11)\n    at dispatchSync (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\state.js:73:5)\n    at _addHook (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:116:27)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:127:3)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\utils\\mockTypeHelpers.ts:431:3)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:111:37)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: Hooks cannot be defined inside tests. Hook of type \"beforeEach\" is nested within \"should set production CSP headers correctly\".\n    at eventHandler (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\eventHandler.js:97:11)\n    at dispatchSync (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\state.js:73:5)\n    at _addHook (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:116:27)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:127:3)\n    at beforeEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\utils\\mockTypeHelpers.ts:431:3)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:111:37)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)\nError: Hooks cannot be defined inside tests. Hook of type \"afterEach\" is nested within \"should set production CSP headers correctly\".\n    at eventHandler (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\eventHandler.js:97:11)\n    at dispatchSync (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\state.js:73:5)\n    at _addHook (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:116:27)\n    at afterEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\index.js:133:3)\n    at afterEach (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\utils\\mockTypeHelpers.ts:439:3)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:111:37)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)\nTypeError: crypto.randomUUID is not a function\n    at SecurityMonitoringService.randomUUID [as logSecurityEvent] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\securityMonitoring.ts:155:18)\n    at SecurityMonitoringService.logSecurityEvent [as checkRequestPattern] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\securityMonitoring.ts:319:12)\n    at SecurityMonitoringService.checkRequestPattern [as analyzeRequest] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\securityMonitoring.ts:239:10)\n    at analyzeRequest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\middleware.ts:403:45)\n    at Object.<anonymous> (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts:120:24)",
          "type": "mock",
          "severity": "low",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should set production CSP headers correctly",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-compliance.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: Hooks cannot be defined inside tests. Hook of type \"beforeEach\" is nested within \"should set production CSP headers correctly\"."
        }
      },
      {
        "metadata": {
          "testId": "Csp-fix-validation::should have NODE_ENV set to development in .env::1759242751992",
          "testName": "should have NODE_ENV set to development in .env",
          "testDescription": "should have NODE_ENV set to development in .env",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts",
          "relativePath": "src\\__tests__\\csp-fix-validation.test.ts",
          "suite": "Csp-fix-validation",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748171,
          "endTime": 1759242748362,
          "duration": 191,
          "memoryUsage": {
            "heapUsed": 166277360,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286867456
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"development\"\u001b[39m\nReceived: \u001b[31m\"production\"\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts:17:32)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"development\"\u001b[39m\nReceived: \u001b[31m\"production\"\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts:17:32)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should have NODE_ENV set to development in .env",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Csp-fix-validation::should prioritize development CSP when NODE_ENV is development::1759242751998",
          "testName": "should prioritize development CSP when NODE_ENV is development",
          "testDescription": "should prioritize development CSP when NODE_ENV is development",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts",
          "relativePath": "src\\__tests__\\csp-fix-validation.test.ts",
          "suite": "Csp-fix-validation",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748171,
          "endTime": 1759242748362,
          "duration": 191,
          "memoryUsage": {
            "heapUsed": 166315168,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286867456
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"isDevelopment && process.env.ENABLE_CSP_IN_DEV !== 'true'\"\u001b[39m\nReceived string:    \u001b[31m\"/**·\u001b[39m\n\u001b[31m * Next.js middleware for security, authentication, and rate limiting·\u001b[39m\n\u001b[31m * Edge Runtime Compatible Version·\u001b[39m\n\u001b[31m *·\u001b[39m\n\u001b[31m * This middleware has been refactored to work with Next.js Edge Runtime:·\u001b[39m\n\u001b[31m * - Uses Web Crypto API instead of Node.js crypto·\u001b[39m\n\u001b[31m * - Removes setInterval usage for cleanup operations·\u001b[39m\n\u001b[31m * - Optimized for edge environments·\u001b[39m\n\u001b[31m */···\u001b[39m\n\u001b[31mimport { NextRequest, NextResponse } from 'next/server'·\u001b[39m\n\u001b[31mimport {·\u001b[39m\n\u001b[31m  defaultSecurityConfig,·\u001b[39m\n\u001b[31m  checkRateLimit,·\u001b[39m\n\u001b[31m  getClientIP,·\u001b[39m\n\u001b[31m  getSession,·\u001b[39m\n\u001b[31m  isLockedOut,·\u001b[39m\n\u001b[31m} from '@/lib/security'·\u001b[39m\n\u001b[31mimport { advancedRateLimitService } from '@/lib/advancedRateLimit'·\u001b[39m\n\u001b[31mimport { validateCSRFMiddleware, csrfProtectionService } from '@/lib/csrfProtection'·\u001b[39m\n\u001b[31mimport { securityMonitoringService } from '@/lib/securityMonitoring'·\u001b[39m\n\u001b[31mimport { getCSPHeader, generateCSPNonce } from '@/lib/cspConfig'·\u001b[39m\n\u001b[31mimport { logger } from '@/utils/logger'·\u001b[39m\n\u001b[31mimport { performCleanupIfNeeded } from '@/lib/edgeRuntimeCleanup'···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Generate a UUID using Web Crypto API (Edge Runtime compatible)·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction generateUUID(): string {·\u001b[39m\n\u001b[31m  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {·\u001b[39m\n\u001b[31m    const r = (Math.random() * 16) | 0·\u001b[39m\n\u001b[31m    const v = c === 'x' ? r : (r & 0x3) | 0x8·\u001b[39m\n\u001b[31m    return v.toString(16)·\u001b[39m\n\u001b[31m  })·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m// Public routes that don't require authentication·\u001b[39m\n\u001b[31mconst publicRoutes = ['/api/health', '/api/csrf', '/api/auth', '/api/ping', '/api/csp-report', '/api/stream-search', '/login', '/favicon.ico', '/_next', '/static', '/manifest.json', '/sw.js']···\u001b[39m\n\u001b[31m// API routes that require rate limiting with their types·\u001b[39m\n\u001b[31mconst rateLimitedRoutes: Record<string, 'general' | 'scraping' | 'auth' | 'upload' | 'export'> = {·\u001b[39m\n\u001b[31m  '/api/scrape': 'scraping',·\u001b[39m\n\u001b[31m  '/api/search': 'scraping',·\u001b[39m\n\u001b[31m  '/api/stream-search': 'scraping', // Streaming search endpoint·\u001b[39m\n\u001b[31m  '/api/geocode': 'general',·\u001b[39m\n\u001b[31m  '/api/auth': 'auth',·\u001b[39m\n\u001b[31m  '/api/data-management': 'general',·\u001b[39m\n\u001b[31m  '/api/config': 'general',·\u001b[39m\n\u001b[31m  '/api/upload': 'upload',·\u001b[39m\n\u001b[31m  '/api/export': 'export',·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m// Routes that require burst protection·\u001b[39m\n\u001b[31mconst burstProtectedRoutes = ['/api/auth', '/api/scrape', '/api/upload']···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Check if a route is public (doesn't require authentication)·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction isPublicRoute(pathname: string): boolean {·\u001b[39m\n\u001b[31m  return publicRoutes.some(route => pathname.startsWith(route))·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Get rate limit type for route·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction getRateLimitType(·\u001b[39m\n\u001b[31m  pathname: string·\u001b[39m\n\u001b[31m): 'general' | 'scraping' | 'auth' | 'upload' | 'export' | null {·\u001b[39m\n\u001b[31m  for (const [route, type] of Object.entries(rateLimitedRoutes)) {·\u001b[39m\n\u001b[31m    if (pathname.startsWith(route)) {·\u001b[39m\n\u001b[31m      return type·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }·\u001b[39m\n\u001b[31m  return null·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Check if route requires burst protection·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction requiresBurstProtection(pathname: string): boolean {·\u001b[39m\n\u001b[31m  return burstProtectedRoutes.some(route => pathname.startsWith(route))·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Add enhanced security headers to response·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction addSecurityHeaders(response: NextResponse): NextResponse {·\u001b[39m\n\u001b[31m  if (!defaultSecurityConfig.enableSecurityHeaders) {·\u001b[39m\n\u001b[31m    return response·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  const isDevelopment = process.env.NODE_ENV === 'development'···\u001b[39m\n\u001b[31m  // Log environment detection for debugging·\u001b[39m\n\u001b[31m  logger.debug('Middleware', `Environment detection: NODE_ENV=${process.env.NODE_ENV}, isDevelopment=${isDevelopment}`)···\u001b[39m\n\u001b[31m  // Always use permissive CSP in development to avoid blocking legitimate development tools·\u001b[39m\n\u001b[31m  if (isDevelopment) {·\u001b[39m\n\u001b[31m    // In development, use a very permissive CSP to avoid blocking legitimate development tools·\u001b[39m\n\u001b[31m    // Remove any nonce-based directives to ensure 'unsafe-inline' works properly·\u001b[39m\n\u001b[31m    const devCSP =·\u001b[39m\n\u001b[31m      \\\"default-src 'self' 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://js.stripe.com https://vercel.live https://checkout.stripe.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' ws: wss: https:; worker-src 'self' blob:; manifest-src 'self'; frame-src 'self' https://js.stripe.com https://checkout.stripe.com;\\\"···\u001b[39m\n\u001b[31m    logger.debug('Middleware', `Setting development CSP: ${devCSP}`)·\u001b[39m\n\u001b[31m    response.headers.set('Content-Security-Policy', devCSP)···\u001b[39m\n\u001b[31m    // Ensure no nonce headers are set in development·\u001b[39m\n\u001b[31m    response.headers.delete('X-CSP-Nonce')···\u001b[39m\n\u001b[31m    // Log final headers for debugging·\u001b[39m\n\u001b[31m    logger.debug('Middleware', `Final CSP header: ${response.headers.get('Content-Security-Policy')}`)·\u001b[39m\n\u001b[31m  } else {·\u001b[39m\n\u001b[31m    // Generate nonce for CSP in production·\u001b[39m\n\u001b[31m    const nonce = generateCSPNonce()···\u001b[39m\n\u001b[31m    // Get enhanced Content Security Policy from centralized config·\u001b[39m\n\u001b[31m    const csp = getCSPHeader(nonce)·\u001b[39m\n\u001b[31m    logger.debug('Middleware', `Setting production CSP with nonce: ${csp}`)·\u001b[39m\n\u001b[31m    response.headers.set('Content-Security-Policy', csp)···\u001b[39m\n\u001b[31m    // Add nonce to response for use in templates·\u001b[39m\n\u001b[31m    if (nonce) {·\u001b[39m\n\u001b[31m      response.headers.set('X-CSP-Nonce', nonce)·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }·······\u001b[39m\n\u001b[31m  // Frame protection·\u001b[39m\n\u001b[31m  response.headers.set('X-Frame-Options', 'DENY')···\u001b[39m\n\u001b[31m  // MIME type sniffing protection·\u001b[39m\n\u001b[31m  response.headers.set('X-Content-Type-Options', 'nosniff')···\u001b[39m\n\u001b[31m  // Referrer policy·\u001b[39m\n\u001b[31m  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')···\u001b[39m\n\u001b[31m  // Feature policy / Permissions policy·\u001b[39m\n\u001b[31m  // Note: Removed 'ambient-light-sensor' as it's not supported by modern browsers·\u001b[39m\n\u001b[31m  const permissionsPolicy = [·\u001b[39m\n\u001b[31m    'camera=()',·\u001b[39m\n\u001b[31m    'microphone=()',·\u001b[39m\n\u001b[31m    'geolocation=()',·\u001b[39m\n\u001b[31m    'payment=*',·\u001b[39m\n\u001b[31m    'usb=()',·\u001b[39m\n\u001b[31m    'magnetometer=()',·\u001b[39m\n\u001b[31m    'gyroscope=()',·\u001b[39m\n\u001b[31m    'accelerometer=()',·\u001b[39m\n\u001b[31m    'autoplay=()',·\u001b[39m\n\u001b[31m    'encrypted-media=()',·\u001b[39m\n\u001b[31m    'fullscreen=(self)',·\u001b[39m\n\u001b[31m    'picture-in-picture=()',·\u001b[39m\n\u001b[31m  ].join(', ')···\u001b[39m\n\u001b[31m  response.headers.set('Permissions-Policy', permissionsPolicy)···\u001b[39m\n\u001b[31m  // XSS protection (legacy but still useful)·\u001b[39m\n\u001b[31m  response.headers.set('X-XSS-Protection', '1; mode=block')···\u001b[39m\n\u001b[31m  // Cross-Origin policies·\u001b[39m\n\u001b[31m  // COEP disabled to allow Stripe.js loading·\u001b[39m\n\u001b[31m  // response.headers.set('Cross-Origin-Embedder-Policy', 'require-corp')·\u001b[39m\n\u001b[31m  response.headers.set('Cross-Origin-Opener-Policy', 'same-origin')·\u001b[39m\n\u001b[31m  response.headers.set('Cross-Origin-Resource-Policy', 'same-origin')···\u001b[39m\n\u001b[31m  // HSTS (only in production)·\u001b[39m\n\u001b[31m  if (process.env.NODE_ENV === 'production') {·\u001b[39m\n\u001b[31m    response.headers.set(·\u001b[39m\n\u001b[31m      'Strict-Transport-Security',·\u001b[39m\n\u001b[31m      'max-age=31536000; includeSubDomains; preload'·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Cache control for sensitive pages (exclude SSE endpoints)·\u001b[39m\n\u001b[31m  const url = response.url || ''·\u001b[39m\n\u001b[31m  const isSSEEndpoint = url.includes('/api/stream-search') || url.includes('/api/stream')···\u001b[39m\n\u001b[31m  if ((url.includes('/login') || url.includes('/api/')) && !isSSEEndpoint) {·\u001b[39m\n\u001b[31m    response.headers.set('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate')·\u001b[39m\n\u001b[31m    response.headers.set('Pragma', 'no-cache')·\u001b[39m\n\u001b[31m    response.headers.set('Expires', '0')·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Special headers for Server-Sent Events endpoints·\u001b[39m\n\u001b[31m  if (isSSEEndpoint) {·\u001b[39m\n\u001b[31m    response.headers.set('Cache-Control', 'no-cache, no-transform')·\u001b[39m\n\u001b[31m    response.headers.set('Connection', 'keep-alive')·\u001b[39m\n\u001b[31m    response.headers.set('X-Accel-Buffering', 'no') // Disable nginx buffering for SSE·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Remove server information·\u001b[39m\n\u001b[31m  response.headers.delete('Server')·\u001b[39m\n\u001b[31m  response.headers.delete('X-Powered-By')·\u001b[39m\n\u001b[31m  response.headers.delete('X-AspNet-Version')·\u001b[39m\n\u001b[31m  response.headers.delete('X-AspNetMvc-Version')···\u001b[39m\n\u001b[31m  // Add security monitoring headers·\u001b[39m\n\u001b[31m  response.headers.set('X-Request-ID', generateUUID())·\u001b[39m\n\u001b[31m  response.headers.set('X-Security-Policy', 'enforced')···\u001b[39m\n\u001b[31m  return response·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Handle advanced rate limiting·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction handleRateLimit(request: NextRequest): NextResponse | null {·\u001b[39m\n\u001b[31m  const pathname = request.nextUrl.pathname·\u001b[39m\n\u001b[31m  const ip = getClientIP(request)···\u001b[39m\n\u001b[31m  // Skip rate limiting for public routes·\u001b[39m\n\u001b[31m  if (isPublicRoute(pathname)) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check if user is locked out (legacy security check)·\u001b[39m\n\u001b[31m  if (isLockedOut(ip)) {·\u001b[39m\n\u001b[31m    return new NextResponse(·\u001b[39m\n\u001b[31m      JSON.stringify({·\u001b[39m\n\u001b[31m        error: 'Account temporarily locked due to too many failed attempts',·\u001b[39m\n\u001b[31m        retryAfter: Math.ceil(defaultSecurityConfig.lockoutDuration / 1000),·\u001b[39m\n\u001b[31m      }),·\u001b[39m\n\u001b[31m      {·\u001b[39m\n\u001b[31m        status: 429,·\u001b[39m\n\u001b[31m        headers: {·\u001b[39m\n\u001b[31m          'Content-Type': 'application/json',·\u001b[39m\n\u001b[31m          'Retry-After': String(Math.ceil(defaultSecurityConfig.lockoutDuration / 1000)),·\u001b[39m\n\u001b[31m          'X-RateLimit-Limit': '0',·\u001b[39m\n\u001b[31m          'X-RateLimit-Remaining': '0',·\u001b[39m\n\u001b[31m        },·\u001b[39m\n\u001b[31m      }·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check burst protection first·\u001b[39m\n\u001b[31m  if (requiresBurstProtection(pathname)) {·\u001b[39m\n\u001b[31m    const burstResult = advancedRateLimitService.checkBurstRateLimit(`ip:${ip}`)·\u001b[39m\n\u001b[31m    if (!burstResult.allowed) {·\u001b[39m\n\u001b[31m      return new NextResponse(·\u001b[39m\n\u001b[31m        JSON.stringify({·\u001b[39m\n\u001b[31m          error: 'Too many requests in a short time. Please slow down.',·\u001b[39m\n\u001b[31m          retryAfter: burstResult.retryAfter || 60,·\u001b[39m\n\u001b[31m        }),·\u001b[39m\n\u001b[31m        {·\u001b[39m\n\u001b[31m          status: 429,·\u001b[39m\n\u001b[31m          headers: {·\u001b[39m\n\u001b[31m            'Content-Type': 'application/json',·\u001b[39m\n\u001b[31m            'Retry-After': String(burstResult.retryAfter || 60),·\u001b[39m\n\u001b[31m            'X-RateLimit-Limit': '20',·\u001b[39m\n\u001b[31m            'X-RateLimit-Remaining': String(burstResult.remaining),·\u001b[39m\n\u001b[31m            'X-RateLimit-Reset': String(burstResult.resetTime),·\u001b[39m\n\u001b[31m          },·\u001b[39m\n\u001b[31m        }·\u001b[39m\n\u001b[31m      )·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check endpoint-specific rate limits·\u001b[39m\n\u001b[31m  const rateLimitType = getRateLimitType(pathname)·\u001b[39m\n\u001b[31m  if (rateLimitType) {·\u001b[39m\n\u001b[31m    const rateLimitResult = advancedRateLimitService.checkApiRateLimit(request, rateLimitType)···\u001b[39m\n\u001b[31m    if (!rateLimitResult.allowed) {·\u001b[39m\n\u001b[31m      return new NextResponse(·\u001b[39m\n\u001b[31m        JSON.stringify({·\u001b[39m\n\u001b[31m          error: `Rate limit exceeded for ${rateLimitType} endpoints. Please slow down.`,·\u001b[39m\n\u001b[31m          retryAfter:·\u001b[39m\n\u001b[31m            rateLimitResult.retryAfter || Math.ceil(defaultSecurityConfig.rateLimitWindow / 1000),·\u001b[39m\n\u001b[31m          type: rateLimitType,·\u001b[39m\n\u001b[31m        }),·\u001b[39m\n\u001b[31m        {·\u001b[39m\n\u001b[31m          status: 429,·\u001b[39m\n\u001b[31m          headers: {·\u001b[39m\n\u001b[31m            'Content-Type': 'application/json',·\u001b[39m\n\u001b[31m            'Retry-After': String(·\u001b[39m\n\u001b[31m              rateLimitResult.retryAfter || Math.ceil(defaultSecurityConfig.rateLimitWindow / 1000)·\u001b[39m\n\u001b[31m            ),·\u001b[39m\n\u001b[31m            'X-RateLimit-Limit': getMaxRequestsForType(rateLimitType),·\u001b[39m\n\u001b[31m            'X-RateLimit-Remaining': String(rateLimitResult.remaining),·\u001b[39m\n\u001b[31m            'X-RateLimit-Reset': String(rateLimitResult.resetTime),·\u001b[39m\n\u001b[31m            'X-RateLimit-Type': rateLimitType,·\u001b[39m\n\u001b[31m          },·\u001b[39m\n\u001b[31m        }·\u001b[39m\n\u001b[31m      )·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  return null·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Get max requests for rate limit type·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction getMaxRequestsForType(type: string): string {·\u001b[39m\n\u001b[31m  const limits: Record<string, string> = {·\u001b[39m\n\u001b[31m    general: '100',·\u001b[39m\n\u001b[31m    scraping: '10',·\u001b[39m\n\u001b[31m    auth: '5',·\u001b[39m\n\u001b[31m    upload: '20',·\u001b[39m\n\u001b[31m    export: '50',·\u001b[39m\n\u001b[31m  }·\u001b[39m\n\u001b[31m  return limits[type] || '100'·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Handle authentication·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction handleAuthentication(request: NextRequest): NextResponse | null {·\u001b[39m\n\u001b[31m  const pathname = request.nextUrl.pathname···\u001b[39m\n\u001b[31m  // Skip authentication for public routes·\u001b[39m\n\u001b[31m  if (isPublicRoute(pathname)) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Skip authentication for API routes that handle their own auth·\u001b[39m\n\u001b[31m  // Note: /api/auth and /api/csrf should be excluded since they create/manage sessions·\u001b[39m\n\u001b[31m  if (pathname.startsWith('/api/') && !pathname.startsWith('/api/protected/')) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Skip authentication if not enabled·\u001b[39m\n\u001b[31m  if (!defaultSecurityConfig.enableAuth) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check for session cookie·\u001b[39m\n\u001b[31m  const sessionId = request.cookies.get('session-id')?.value···\u001b[39m\n\u001b[31m  if (!sessionId) {·\u001b[39m\n\u001b[31m    // Redirect to login for browser requests, but avoid redirect loops·\u001b[39m\n\u001b[31m    if (request.headers.get('accept')?.includes('text/html') && !pathname.startsWith('/login')) {·\u001b[39m\n\u001b[31m      return NextResponse.redirect(new URL('/login', request.url))·\u001b[39m\n\u001b[31m    }···\u001b[39m\n\u001b[31m    // Return 401 for API requests·\u001b[39m\n\u001b[31m    return new NextResponse(JSON.stringify({ error: 'Authentication required' }), {·\u001b[39m\n\u001b[31m      status: 401,·\u001b[39m\n\u001b[31m      headers: { 'Content-Type': 'application/json' },·\u001b[39m\n\u001b[31m    })·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Validate session·\u001b[39m\n\u001b[31m  const session = getSession(sessionId)···\u001b[39m\n\u001b[31m  if (!session || !session.isValid) {·\u001b[39m\n\u001b[31m    // Clear invalid session cookie·\u001b[39m\n\u001b[31m    const response = request.headers.get('accept')?.includes('text/html') && !pathname.startsWith('/login')·\u001b[39m\n\u001b[31m      ? NextResponse.redirect(new URL('/login', request.url))·\u001b[39m\n\u001b[31m      : new NextResponse(JSON.stringify({ error: 'Invalid session' }), {·\u001b[39m\n\u001b[31m          status: 401,·\u001b[39m\n\u001b[31m          headers: { 'Content-Type': 'application/json' },·\u001b[39m\n\u001b[31m        })···\u001b[39m\n\u001b[31m    response.cookies.delete('session-id')·\u001b[39m\n\u001b[31m    return response·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  return null·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Handle CSRF protection for state-changing requests·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction handleCSRF(request: NextRequest): NextResponse | null {·\u001b[39m\n\u001b[31m  const pathname = request.nextUrl.pathname···\u001b[39m\n\u001b[31m  // Skip CSRF if authentication is disabled·\u001b[39m\n\u001b[31m  if (!defaultSecurityConfig.enableAuth) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Skip CSRF protection for public routes that don't need it·\u001b[39m\n\u001b[31m  if (isPublicRoute(pathname)) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Only apply CSRF to state-changing requests (POST, PUT, DELETE, PATCH)·\u001b[39m\n\u001b[31m  const needsCSRF = ['POST', 'PUT', 'DELETE', 'PATCH'].includes(request.method) &&·\u001b[39m\n\u001b[31m    pathname.startsWith('/api/') &&·\u001b[39m\n\u001b[31m    !pathname.startsWith('/api/auth') && // Auth endpoint handles its own CSRF·\u001b[39m\n\u001b[31m    !pathname.startsWith('/api/csrf')   // CSRF endpoint doesn't need CSRF protection···\u001b[39m\n\u001b[31m  if (!needsCSRF) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Use the enhanced CSRF protection middleware·\u001b[39m\n\u001b[31m  return validateCSRFMiddleware(request)·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Main middleware function·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mexport async function middleware(request: NextRequest) {·\u001b[39m\n\u001b[31m  // Perform cleanup if needed (Edge Runtime compatible)·\u001b[39m\n\u001b[31m  await performCleanupIfNeeded()···\u001b[39m\n\u001b[31m  // Track request signature for pattern analysis·\u001b[39m\n\u001b[31m  securityMonitoringService.trackRequestSignature(request)···\u001b[39m\n\u001b[31m  // Analyze request for immediate threats·\u001b[39m\n\u001b[31m  const threats = securityMonitoringService.analyzeRequest(request)·\u001b[39m\n\u001b[31m  if (threats.length > 0) {·\u001b[39m\n\u001b[31m    // Log threats but continue processing (threats are already logged in analyzeRequest)·\u001b[39m\n\u001b[31m    const highSeverityThreats = threats.filter(·\u001b[39m\n\u001b[31m      (threat: any) => threat.severity === 'high' || threat.severity === 'critical'·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m    if (highSeverityThreats.length > 0) {·\u001b[39m\n\u001b[31m      // Block high severity threats·\u001b[39m\n\u001b[31m      return new NextResponse(·\u001b[39m\n\u001b[31m        JSON.stringify({·\u001b[39m\n\u001b[31m          error: 'Request blocked due to security policy violation',·\u001b[39m\n\u001b[31m          threatCount: highSeverityThreats.length,·\u001b[39m\n\u001b[31m        }),·\u001b[39m\n\u001b[31m        {·\u001b[39m\n\u001b[31m          status: 403,·\u001b[39m\n\u001b[31m          headers: { 'Content-Type': 'application/json' },·\u001b[39m\n\u001b[31m        }·\u001b[39m\n\u001b[31m      )·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Handle rate limiting first·\u001b[39m\n\u001b[31m  const rateLimitResponse = handleRateLimit(request)·\u001b[39m\n\u001b[31m  if (rateLimitResponse) {·\u001b[39m\n\u001b[31m    // Log rate limit event·\u001b[39m\n\u001b[31m    securityMonitoringService.logSecurityEvent(·\u001b[39m\n\u001b[31m      'rate_limit_exceeded',·\u001b[39m\n\u001b[31m      'medium',·\u001b[39m\n\u001b[31m      request,·\u001b[39m\n\u001b[31m      { message: 'Rate limit exceeded' },·\u001b[39m\n\u001b[31m      true·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m    return addSecurityHeaders(rateLimitResponse)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Handle authentication·\u001b[39m\n\u001b[31m  const authResponse = handleAuthentication(request)·\u001b[39m\n\u001b[31m  if (authResponse) {·\u001b[39m\n\u001b[31m    return addSecurityHeaders(authResponse)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Handle CSRF protection·\u001b[39m\n\u001b[31m  const csrfResponse = handleCSRF(request)·\u001b[39m\n\u001b[31m  if (csrfResponse) {·\u001b[39m\n\u001b[31m    // Log CSRF violation·\u001b[39m\n\u001b[31m    securityMonitoringService.logSecurityEvent(·\u001b[39m\n\u001b[31m      'invalid_csrf_token',·\u001b[39m\n\u001b[31m      'high',·\u001b[39m\n\u001b[31m      request,·\u001b[39m\n\u001b[31m      { message: 'CSRF token validation failed' },·\u001b[39m\n\u001b[31m      true·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m    return addSecurityHeaders(csrfResponse)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Continue with the request·\u001b[39m\n\u001b[31m  const response = NextResponse.next()···\u001b[39m\n\u001b[31m  // Add CSRF headers if session exists·\u001b[39m\n\u001b[31m  const sessionId = request.cookies.get('session-id')?.value·\u001b[39m\n\u001b[31m  if (sessionId) {·\u001b[39m\n\u001b[31m    csrfProtectionService.addCSRFHeaders(response, sessionId)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Add security headers to all responses·\u001b[39m\n\u001b[31m  return addSecurityHeaders(response)·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Configure which routes the middleware should run on·\u001b[39m\n\u001b[31m * Explicitly configured for Edge Runtime compatibility·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mexport const config = {·\u001b[39m\n\u001b[31m  matcher: [·\u001b[39m\n\u001b[31m    /*·\u001b[39m\n\u001b[31m     * Match all request paths except for the ones starting with:·\u001b[39m\n\u001b[31m     * - _next/static (static files)·\u001b[39m\n\u001b[31m     * - _next/image (image optimization files)·\u001b[39m\n\u001b[31m     * - favicon.ico (favicon file)·\u001b[39m\n\u001b[31m     * - favicon.png (favicon PNG file)·\u001b[39m\n\u001b[31m     * - manifest.json (PWA manifest)·\u001b[39m\n\u001b[31m     * - sw.js (service worker)·\u001b[39m\n\u001b[31m     * But include API routes that need middleware protection·\u001b[39m\n\u001b[31m     */·\u001b[39m\n\u001b[31m    '/((?!_next/static|_next/image|favicon\\\\\\\\.ico|favicon\\\\\\\\.png|manifest\\\\\\\\.json|sw\\\\\\\\.js).*)',·\u001b[39m\n\u001b[31m  ],·\u001b[39m\n\u001b[31m  // Explicitly specify Edge Runtime for better performance and compatibility·\u001b[39m\n\u001b[31m  runtime: 'experimental-edge',·\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31m\"\u001b[39m\n    at Object.toContain (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts:71:33)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m\n\nExpected substring: \u001b[32m\"isDevelopment && process.env.ENABLE_CSP_IN_DEV !== 'true'\"\u001b[39m\nReceived string:    \u001b[31m\"/**·\u001b[39m\n\u001b[31m * Next.js middleware for security, authentication, and rate limiting·\u001b[39m\n\u001b[31m * Edge Runtime Compatible Version·\u001b[39m\n\u001b[31m *·\u001b[39m\n\u001b[31m * This middleware has been refactored to work with Next.js Edge Runtime:·\u001b[39m\n\u001b[31m * - Uses Web Crypto API instead of Node.js crypto·\u001b[39m\n\u001b[31m * - Removes setInterval usage for cleanup operations·\u001b[39m\n\u001b[31m * - Optimized for edge environments·\u001b[39m\n\u001b[31m */···\u001b[39m\n\u001b[31mimport { NextRequest, NextResponse } from 'next/server'·\u001b[39m\n\u001b[31mimport {·\u001b[39m\n\u001b[31m  defaultSecurityConfig,·\u001b[39m\n\u001b[31m  checkRateLimit,·\u001b[39m\n\u001b[31m  getClientIP,·\u001b[39m\n\u001b[31m  getSession,·\u001b[39m\n\u001b[31m  isLockedOut,·\u001b[39m\n\u001b[31m} from '@/lib/security'·\u001b[39m\n\u001b[31mimport { advancedRateLimitService } from '@/lib/advancedRateLimit'·\u001b[39m\n\u001b[31mimport { validateCSRFMiddleware, csrfProtectionService } from '@/lib/csrfProtection'·\u001b[39m\n\u001b[31mimport { securityMonitoringService } from '@/lib/securityMonitoring'·\u001b[39m\n\u001b[31mimport { getCSPHeader, generateCSPNonce } from '@/lib/cspConfig'·\u001b[39m\n\u001b[31mimport { logger } from '@/utils/logger'·\u001b[39m\n\u001b[31mimport { performCleanupIfNeeded } from '@/lib/edgeRuntimeCleanup'···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Generate a UUID using Web Crypto API (Edge Runtime compatible)·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction generateUUID(): string {·\u001b[39m\n\u001b[31m  return 'xxxxxxxx-xxxx-4xxx-yxxx-xxxxxxxxxxxx'.replace(/[xy]/g, function (c) {·\u001b[39m\n\u001b[31m    const r = (Math.random() * 16) | 0·\u001b[39m\n\u001b[31m    const v = c === 'x' ? r : (r & 0x3) | 0x8·\u001b[39m\n\u001b[31m    return v.toString(16)·\u001b[39m\n\u001b[31m  })·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m// Public routes that don't require authentication·\u001b[39m\n\u001b[31mconst publicRoutes = ['/api/health', '/api/csrf', '/api/auth', '/api/ping', '/api/csp-report', '/api/stream-search', '/login', '/favicon.ico', '/_next', '/static', '/manifest.json', '/sw.js']···\u001b[39m\n\u001b[31m// API routes that require rate limiting with their types·\u001b[39m\n\u001b[31mconst rateLimitedRoutes: Record<string, 'general' | 'scraping' | 'auth' | 'upload' | 'export'> = {·\u001b[39m\n\u001b[31m  '/api/scrape': 'scraping',·\u001b[39m\n\u001b[31m  '/api/search': 'scraping',·\u001b[39m\n\u001b[31m  '/api/stream-search': 'scraping', // Streaming search endpoint·\u001b[39m\n\u001b[31m  '/api/geocode': 'general',·\u001b[39m\n\u001b[31m  '/api/auth': 'auth',·\u001b[39m\n\u001b[31m  '/api/data-management': 'general',·\u001b[39m\n\u001b[31m  '/api/config': 'general',·\u001b[39m\n\u001b[31m  '/api/upload': 'upload',·\u001b[39m\n\u001b[31m  '/api/export': 'export',·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m// Routes that require burst protection·\u001b[39m\n\u001b[31mconst burstProtectedRoutes = ['/api/auth', '/api/scrape', '/api/upload']···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Check if a route is public (doesn't require authentication)·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction isPublicRoute(pathname: string): boolean {·\u001b[39m\n\u001b[31m  return publicRoutes.some(route => pathname.startsWith(route))·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Get rate limit type for route·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction getRateLimitType(·\u001b[39m\n\u001b[31m  pathname: string·\u001b[39m\n\u001b[31m): 'general' | 'scraping' | 'auth' | 'upload' | 'export' | null {·\u001b[39m\n\u001b[31m  for (const [route, type] of Object.entries(rateLimitedRoutes)) {·\u001b[39m\n\u001b[31m    if (pathname.startsWith(route)) {·\u001b[39m\n\u001b[31m      return type·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }·\u001b[39m\n\u001b[31m  return null·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Check if route requires burst protection·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction requiresBurstProtection(pathname: string): boolean {·\u001b[39m\n\u001b[31m  return burstProtectedRoutes.some(route => pathname.startsWith(route))·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Add enhanced security headers to response·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction addSecurityHeaders(response: NextResponse): NextResponse {·\u001b[39m\n\u001b[31m  if (!defaultSecurityConfig.enableSecurityHeaders) {·\u001b[39m\n\u001b[31m    return response·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  const isDevelopment = process.env.NODE_ENV === 'development'···\u001b[39m\n\u001b[31m  // Log environment detection for debugging·\u001b[39m\n\u001b[31m  logger.debug('Middleware', `Environment detection: NODE_ENV=${process.env.NODE_ENV}, isDevelopment=${isDevelopment}`)···\u001b[39m\n\u001b[31m  // Always use permissive CSP in development to avoid blocking legitimate development tools·\u001b[39m\n\u001b[31m  if (isDevelopment) {·\u001b[39m\n\u001b[31m    // In development, use a very permissive CSP to avoid blocking legitimate development tools·\u001b[39m\n\u001b[31m    // Remove any nonce-based directives to ensure 'unsafe-inline' works properly·\u001b[39m\n\u001b[31m    const devCSP =·\u001b[39m\n\u001b[31m      \\\"default-src 'self' 'unsafe-inline' 'unsafe-eval'; script-src 'self' 'unsafe-eval' 'unsafe-inline' https://js.stripe.com https://vercel.live https://checkout.stripe.com; style-src 'self' 'unsafe-inline'; img-src 'self' data: blob: https:; font-src 'self' data:; connect-src 'self' ws: wss: https:; worker-src 'self' blob:; manifest-src 'self'; frame-src 'self' https://js.stripe.com https://checkout.stripe.com;\\\"···\u001b[39m\n\u001b[31m    logger.debug('Middleware', `Setting development CSP: ${devCSP}`)·\u001b[39m\n\u001b[31m    response.headers.set('Content-Security-Policy', devCSP)···\u001b[39m\n\u001b[31m    // Ensure no nonce headers are set in development·\u001b[39m\n\u001b[31m    response.headers.delete('X-CSP-Nonce')···\u001b[39m\n\u001b[31m    // Log final headers for debugging·\u001b[39m\n\u001b[31m    logger.debug('Middleware', `Final CSP header: ${response.headers.get('Content-Security-Policy')}`)·\u001b[39m\n\u001b[31m  } else {·\u001b[39m\n\u001b[31m    // Generate nonce for CSP in production·\u001b[39m\n\u001b[31m    const nonce = generateCSPNonce()···\u001b[39m\n\u001b[31m    // Get enhanced Content Security Policy from centralized config·\u001b[39m\n\u001b[31m    const csp = getCSPHeader(nonce)·\u001b[39m\n\u001b[31m    logger.debug('Middleware', `Setting production CSP with nonce: ${csp}`)·\u001b[39m\n\u001b[31m    response.headers.set('Content-Security-Policy', csp)···\u001b[39m\n\u001b[31m    // Add nonce to response for use in templates·\u001b[39m\n\u001b[31m    if (nonce) {·\u001b[39m\n\u001b[31m      response.headers.set('X-CSP-Nonce', nonce)·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }·······\u001b[39m\n\u001b[31m  // Frame protection·\u001b[39m\n\u001b[31m  response.headers.set('X-Frame-Options', 'DENY')···\u001b[39m\n\u001b[31m  // MIME type sniffing protection·\u001b[39m\n\u001b[31m  response.headers.set('X-Content-Type-Options', 'nosniff')···\u001b[39m\n\u001b[31m  // Referrer policy·\u001b[39m\n\u001b[31m  response.headers.set('Referrer-Policy', 'strict-origin-when-cross-origin')···\u001b[39m\n\u001b[31m  // Feature policy / Permissions policy·\u001b[39m\n\u001b[31m  // Note: Removed 'ambient-light-sensor' as it's not supported by modern browsers·\u001b[39m\n\u001b[31m  const permissionsPolicy = [·\u001b[39m\n\u001b[31m    'camera=()',·\u001b[39m\n\u001b[31m    'microphone=()',·\u001b[39m\n\u001b[31m    'geolocation=()',·\u001b[39m\n\u001b[31m    'payment=*',·\u001b[39m\n\u001b[31m    'usb=()',·\u001b[39m\n\u001b[31m    'magnetometer=()',·\u001b[39m\n\u001b[31m    'gyroscope=()',·\u001b[39m\n\u001b[31m    'accelerometer=()',·\u001b[39m\n\u001b[31m    'autoplay=()',·\u001b[39m\n\u001b[31m    'encrypted-media=()',·\u001b[39m\n\u001b[31m    'fullscreen=(self)',·\u001b[39m\n\u001b[31m    'picture-in-picture=()',·\u001b[39m\n\u001b[31m  ].join(', ')···\u001b[39m\n\u001b[31m  response.headers.set('Permissions-Policy', permissionsPolicy)···\u001b[39m\n\u001b[31m  // XSS protection (legacy but still useful)·\u001b[39m\n\u001b[31m  response.headers.set('X-XSS-Protection', '1; mode=block')···\u001b[39m\n\u001b[31m  // Cross-Origin policies·\u001b[39m\n\u001b[31m  // COEP disabled to allow Stripe.js loading·\u001b[39m\n\u001b[31m  // response.headers.set('Cross-Origin-Embedder-Policy', 'require-corp')·\u001b[39m\n\u001b[31m  response.headers.set('Cross-Origin-Opener-Policy', 'same-origin')·\u001b[39m\n\u001b[31m  response.headers.set('Cross-Origin-Resource-Policy', 'same-origin')···\u001b[39m\n\u001b[31m  // HSTS (only in production)·\u001b[39m\n\u001b[31m  if (process.env.NODE_ENV === 'production') {·\u001b[39m\n\u001b[31m    response.headers.set(·\u001b[39m\n\u001b[31m      'Strict-Transport-Security',·\u001b[39m\n\u001b[31m      'max-age=31536000; includeSubDomains; preload'·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Cache control for sensitive pages (exclude SSE endpoints)·\u001b[39m\n\u001b[31m  const url = response.url || ''·\u001b[39m\n\u001b[31m  const isSSEEndpoint = url.includes('/api/stream-search') || url.includes('/api/stream')···\u001b[39m\n\u001b[31m  if ((url.includes('/login') || url.includes('/api/')) && !isSSEEndpoint) {·\u001b[39m\n\u001b[31m    response.headers.set('Cache-Control', 'no-store, no-cache, must-revalidate, proxy-revalidate')·\u001b[39m\n\u001b[31m    response.headers.set('Pragma', 'no-cache')·\u001b[39m\n\u001b[31m    response.headers.set('Expires', '0')·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Special headers for Server-Sent Events endpoints·\u001b[39m\n\u001b[31m  if (isSSEEndpoint) {·\u001b[39m\n\u001b[31m    response.headers.set('Cache-Control', 'no-cache, no-transform')·\u001b[39m\n\u001b[31m    response.headers.set('Connection', 'keep-alive')·\u001b[39m\n\u001b[31m    response.headers.set('X-Accel-Buffering', 'no') // Disable nginx buffering for SSE·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Remove server information·\u001b[39m\n\u001b[31m  response.headers.delete('Server')·\u001b[39m\n\u001b[31m  response.headers.delete('X-Powered-By')·\u001b[39m\n\u001b[31m  response.headers.delete('X-AspNet-Version')·\u001b[39m\n\u001b[31m  response.headers.delete('X-AspNetMvc-Version')···\u001b[39m\n\u001b[31m  // Add security monitoring headers·\u001b[39m\n\u001b[31m  response.headers.set('X-Request-ID', generateUUID())·\u001b[39m\n\u001b[31m  response.headers.set('X-Security-Policy', 'enforced')···\u001b[39m\n\u001b[31m  return response·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Handle advanced rate limiting·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction handleRateLimit(request: NextRequest): NextResponse | null {·\u001b[39m\n\u001b[31m  const pathname = request.nextUrl.pathname·\u001b[39m\n\u001b[31m  const ip = getClientIP(request)···\u001b[39m\n\u001b[31m  // Skip rate limiting for public routes·\u001b[39m\n\u001b[31m  if (isPublicRoute(pathname)) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check if user is locked out (legacy security check)·\u001b[39m\n\u001b[31m  if (isLockedOut(ip)) {·\u001b[39m\n\u001b[31m    return new NextResponse(·\u001b[39m\n\u001b[31m      JSON.stringify({·\u001b[39m\n\u001b[31m        error: 'Account temporarily locked due to too many failed attempts',·\u001b[39m\n\u001b[31m        retryAfter: Math.ceil(defaultSecurityConfig.lockoutDuration / 1000),·\u001b[39m\n\u001b[31m      }),·\u001b[39m\n\u001b[31m      {·\u001b[39m\n\u001b[31m        status: 429,·\u001b[39m\n\u001b[31m        headers: {·\u001b[39m\n\u001b[31m          'Content-Type': 'application/json',·\u001b[39m\n\u001b[31m          'Retry-After': String(Math.ceil(defaultSecurityConfig.lockoutDuration / 1000)),·\u001b[39m\n\u001b[31m          'X-RateLimit-Limit': '0',·\u001b[39m\n\u001b[31m          'X-RateLimit-Remaining': '0',·\u001b[39m\n\u001b[31m        },·\u001b[39m\n\u001b[31m      }·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check burst protection first·\u001b[39m\n\u001b[31m  if (requiresBurstProtection(pathname)) {·\u001b[39m\n\u001b[31m    const burstResult = advancedRateLimitService.checkBurstRateLimit(`ip:${ip}`)·\u001b[39m\n\u001b[31m    if (!burstResult.allowed) {·\u001b[39m\n\u001b[31m      return new NextResponse(·\u001b[39m\n\u001b[31m        JSON.stringify({·\u001b[39m\n\u001b[31m          error: 'Too many requests in a short time. Please slow down.',·\u001b[39m\n\u001b[31m          retryAfter: burstResult.retryAfter || 60,·\u001b[39m\n\u001b[31m        }),·\u001b[39m\n\u001b[31m        {·\u001b[39m\n\u001b[31m          status: 429,·\u001b[39m\n\u001b[31m          headers: {·\u001b[39m\n\u001b[31m            'Content-Type': 'application/json',·\u001b[39m\n\u001b[31m            'Retry-After': String(burstResult.retryAfter || 60),·\u001b[39m\n\u001b[31m            'X-RateLimit-Limit': '20',·\u001b[39m\n\u001b[31m            'X-RateLimit-Remaining': String(burstResult.remaining),·\u001b[39m\n\u001b[31m            'X-RateLimit-Reset': String(burstResult.resetTime),·\u001b[39m\n\u001b[31m          },·\u001b[39m\n\u001b[31m        }·\u001b[39m\n\u001b[31m      )·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check endpoint-specific rate limits·\u001b[39m\n\u001b[31m  const rateLimitType = getRateLimitType(pathname)·\u001b[39m\n\u001b[31m  if (rateLimitType) {·\u001b[39m\n\u001b[31m    const rateLimitResult = advancedRateLimitService.checkApiRateLimit(request, rateLimitType)···\u001b[39m\n\u001b[31m    if (!rateLimitResult.allowed) {·\u001b[39m\n\u001b[31m      return new NextResponse(·\u001b[39m\n\u001b[31m        JSON.stringify({·\u001b[39m\n\u001b[31m          error: `Rate limit exceeded for ${rateLimitType} endpoints. Please slow down.`,·\u001b[39m\n\u001b[31m          retryAfter:·\u001b[39m\n\u001b[31m            rateLimitResult.retryAfter || Math.ceil(defaultSecurityConfig.rateLimitWindow / 1000),·\u001b[39m\n\u001b[31m          type: rateLimitType,·\u001b[39m\n\u001b[31m        }),·\u001b[39m\n\u001b[31m        {·\u001b[39m\n\u001b[31m          status: 429,·\u001b[39m\n\u001b[31m          headers: {·\u001b[39m\n\u001b[31m            'Content-Type': 'application/json',·\u001b[39m\n\u001b[31m            'Retry-After': String(·\u001b[39m\n\u001b[31m              rateLimitResult.retryAfter || Math.ceil(defaultSecurityConfig.rateLimitWindow / 1000)·\u001b[39m\n\u001b[31m            ),·\u001b[39m\n\u001b[31m            'X-RateLimit-Limit': getMaxRequestsForType(rateLimitType),·\u001b[39m\n\u001b[31m            'X-RateLimit-Remaining': String(rateLimitResult.remaining),·\u001b[39m\n\u001b[31m            'X-RateLimit-Reset': String(rateLimitResult.resetTime),·\u001b[39m\n\u001b[31m            'X-RateLimit-Type': rateLimitType,·\u001b[39m\n\u001b[31m          },·\u001b[39m\n\u001b[31m        }·\u001b[39m\n\u001b[31m      )·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  return null·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Get max requests for rate limit type·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction getMaxRequestsForType(type: string): string {·\u001b[39m\n\u001b[31m  const limits: Record<string, string> = {·\u001b[39m\n\u001b[31m    general: '100',·\u001b[39m\n\u001b[31m    scraping: '10',·\u001b[39m\n\u001b[31m    auth: '5',·\u001b[39m\n\u001b[31m    upload: '20',·\u001b[39m\n\u001b[31m    export: '50',·\u001b[39m\n\u001b[31m  }·\u001b[39m\n\u001b[31m  return limits[type] || '100'·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Handle authentication·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction handleAuthentication(request: NextRequest): NextResponse | null {·\u001b[39m\n\u001b[31m  const pathname = request.nextUrl.pathname···\u001b[39m\n\u001b[31m  // Skip authentication for public routes·\u001b[39m\n\u001b[31m  if (isPublicRoute(pathname)) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Skip authentication for API routes that handle their own auth·\u001b[39m\n\u001b[31m  // Note: /api/auth and /api/csrf should be excluded since they create/manage sessions·\u001b[39m\n\u001b[31m  if (pathname.startsWith('/api/') && !pathname.startsWith('/api/protected/')) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Skip authentication if not enabled·\u001b[39m\n\u001b[31m  if (!defaultSecurityConfig.enableAuth) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Check for session cookie·\u001b[39m\n\u001b[31m  const sessionId = request.cookies.get('session-id')?.value···\u001b[39m\n\u001b[31m  if (!sessionId) {·\u001b[39m\n\u001b[31m    // Redirect to login for browser requests, but avoid redirect loops·\u001b[39m\n\u001b[31m    if (request.headers.get('accept')?.includes('text/html') && !pathname.startsWith('/login')) {·\u001b[39m\n\u001b[31m      return NextResponse.redirect(new URL('/login', request.url))·\u001b[39m\n\u001b[31m    }···\u001b[39m\n\u001b[31m    // Return 401 for API requests·\u001b[39m\n\u001b[31m    return new NextResponse(JSON.stringify({ error: 'Authentication required' }), {·\u001b[39m\n\u001b[31m      status: 401,·\u001b[39m\n\u001b[31m      headers: { 'Content-Type': 'application/json' },·\u001b[39m\n\u001b[31m    })·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Validate session·\u001b[39m\n\u001b[31m  const session = getSession(sessionId)···\u001b[39m\n\u001b[31m  if (!session || !session.isValid) {·\u001b[39m\n\u001b[31m    // Clear invalid session cookie·\u001b[39m\n\u001b[31m    const response = request.headers.get('accept')?.includes('text/html') && !pathname.startsWith('/login')·\u001b[39m\n\u001b[31m      ? NextResponse.redirect(new URL('/login', request.url))·\u001b[39m\n\u001b[31m      : new NextResponse(JSON.stringify({ error: 'Invalid session' }), {·\u001b[39m\n\u001b[31m          status: 401,·\u001b[39m\n\u001b[31m          headers: { 'Content-Type': 'application/json' },·\u001b[39m\n\u001b[31m        })···\u001b[39m\n\u001b[31m    response.cookies.delete('session-id')·\u001b[39m\n\u001b[31m    return response·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  return null·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Handle CSRF protection for state-changing requests·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mfunction handleCSRF(request: NextRequest): NextResponse | null {·\u001b[39m\n\u001b[31m  const pathname = request.nextUrl.pathname···\u001b[39m\n\u001b[31m  // Skip CSRF if authentication is disabled·\u001b[39m\n\u001b[31m  if (!defaultSecurityConfig.enableAuth) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Skip CSRF protection for public routes that don't need it·\u001b[39m\n\u001b[31m  if (isPublicRoute(pathname)) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Only apply CSRF to state-changing requests (POST, PUT, DELETE, PATCH)·\u001b[39m\n\u001b[31m  const needsCSRF = ['POST', 'PUT', 'DELETE', 'PATCH'].includes(request.method) &&·\u001b[39m\n\u001b[31m    pathname.startsWith('/api/') &&·\u001b[39m\n\u001b[31m    !pathname.startsWith('/api/auth') && // Auth endpoint handles its own CSRF·\u001b[39m\n\u001b[31m    !pathname.startsWith('/api/csrf')   // CSRF endpoint doesn't need CSRF protection···\u001b[39m\n\u001b[31m  if (!needsCSRF) {·\u001b[39m\n\u001b[31m    return null·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Use the enhanced CSRF protection middleware·\u001b[39m\n\u001b[31m  return validateCSRFMiddleware(request)·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Main middleware function·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mexport async function middleware(request: NextRequest) {·\u001b[39m\n\u001b[31m  // Perform cleanup if needed (Edge Runtime compatible)·\u001b[39m\n\u001b[31m  await performCleanupIfNeeded()···\u001b[39m\n\u001b[31m  // Track request signature for pattern analysis·\u001b[39m\n\u001b[31m  securityMonitoringService.trackRequestSignature(request)···\u001b[39m\n\u001b[31m  // Analyze request for immediate threats·\u001b[39m\n\u001b[31m  const threats = securityMonitoringService.analyzeRequest(request)·\u001b[39m\n\u001b[31m  if (threats.length > 0) {·\u001b[39m\n\u001b[31m    // Log threats but continue processing (threats are already logged in analyzeRequest)·\u001b[39m\n\u001b[31m    const highSeverityThreats = threats.filter(·\u001b[39m\n\u001b[31m      (threat: any) => threat.severity === 'high' || threat.severity === 'critical'·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m    if (highSeverityThreats.length > 0) {·\u001b[39m\n\u001b[31m      // Block high severity threats·\u001b[39m\n\u001b[31m      return new NextResponse(·\u001b[39m\n\u001b[31m        JSON.stringify({·\u001b[39m\n\u001b[31m          error: 'Request blocked due to security policy violation',·\u001b[39m\n\u001b[31m          threatCount: highSeverityThreats.length,·\u001b[39m\n\u001b[31m        }),·\u001b[39m\n\u001b[31m        {·\u001b[39m\n\u001b[31m          status: 403,·\u001b[39m\n\u001b[31m          headers: { 'Content-Type': 'application/json' },·\u001b[39m\n\u001b[31m        }·\u001b[39m\n\u001b[31m      )·\u001b[39m\n\u001b[31m    }·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Handle rate limiting first·\u001b[39m\n\u001b[31m  const rateLimitResponse = handleRateLimit(request)·\u001b[39m\n\u001b[31m  if (rateLimitResponse) {·\u001b[39m\n\u001b[31m    // Log rate limit event·\u001b[39m\n\u001b[31m    securityMonitoringService.logSecurityEvent(·\u001b[39m\n\u001b[31m      'rate_limit_exceeded',·\u001b[39m\n\u001b[31m      'medium',·\u001b[39m\n\u001b[31m      request,·\u001b[39m\n\u001b[31m      { message: 'Rate limit exceeded' },·\u001b[39m\n\u001b[31m      true·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m    return addSecurityHeaders(rateLimitResponse)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Handle authentication·\u001b[39m\n\u001b[31m  const authResponse = handleAuthentication(request)·\u001b[39m\n\u001b[31m  if (authResponse) {·\u001b[39m\n\u001b[31m    return addSecurityHeaders(authResponse)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Handle CSRF protection·\u001b[39m\n\u001b[31m  const csrfResponse = handleCSRF(request)·\u001b[39m\n\u001b[31m  if (csrfResponse) {·\u001b[39m\n\u001b[31m    // Log CSRF violation·\u001b[39m\n\u001b[31m    securityMonitoringService.logSecurityEvent(·\u001b[39m\n\u001b[31m      'invalid_csrf_token',·\u001b[39m\n\u001b[31m      'high',·\u001b[39m\n\u001b[31m      request,·\u001b[39m\n\u001b[31m      { message: 'CSRF token validation failed' },·\u001b[39m\n\u001b[31m      true·\u001b[39m\n\u001b[31m    )·\u001b[39m\n\u001b[31m    return addSecurityHeaders(csrfResponse)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Continue with the request·\u001b[39m\n\u001b[31m  const response = NextResponse.next()···\u001b[39m\n\u001b[31m  // Add CSRF headers if session exists·\u001b[39m\n\u001b[31m  const sessionId = request.cookies.get('session-id')?.value·\u001b[39m\n\u001b[31m  if (sessionId) {·\u001b[39m\n\u001b[31m    csrfProtectionService.addCSRFHeaders(response, sessionId)·\u001b[39m\n\u001b[31m  }···\u001b[39m\n\u001b[31m  // Add security headers to all responses·\u001b[39m\n\u001b[31m  return addSecurityHeaders(response)·\u001b[39m\n\u001b[31m}···\u001b[39m\n\u001b[31m/**·\u001b[39m\n\u001b[31m * Configure which routes the middleware should run on·\u001b[39m\n\u001b[31m * Explicitly configured for Edge Runtime compatibility·\u001b[39m\n\u001b[31m */·\u001b[39m\n\u001b[31mexport const config = {·\u001b[39m\n\u001b[31m  matcher: [·\u001b[39m\n\u001b[31m    /*·\u001b[39m\n\u001b[31m     * Match all request paths except for the ones starting with:·\u001b[39m\n\u001b[31m     * - _next/static (static files)·\u001b[39m\n\u001b[31m     * - _next/image (image optimization files)·\u001b[39m\n\u001b[31m     * - favicon.ico (favicon file)·\u001b[39m\n\u001b[31m     * - favicon.png (favicon PNG file)·\u001b[39m\n\u001b[31m     * - manifest.json (PWA manifest)·\u001b[39m\n\u001b[31m     * - sw.js (service worker)·\u001b[39m\n\u001b[31m     * But include API routes that need middleware protection·\u001b[39m\n\u001b[31m     */·\u001b[39m\n\u001b[31m    '/((?!_next/static|_next/image|favicon\\\\\\\\.ico|favicon\\\\\\\\.png|manifest\\\\\\\\.json|sw\\\\\\\\.js).*)',·\u001b[39m\n\u001b[31m  ],·\u001b[39m\n\u001b[31m  // Explicitly specify Edge Runtime for better performance and compatibility·\u001b[39m\n\u001b[31m  runtime: 'experimental-edge',·\u001b[39m\n\u001b[31m}·\u001b[39m\n\u001b[31m\"\u001b[39m\n    at Object.toContain (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts:71:33)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should prioritize development CSP when NODE_ENV is development",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp-fix-validation.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoContain\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // indexOf\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Email Validation Service::should validate domains with MX records::1759242752010",
          "testName": "should validate domains with MX records",
          "testDescription": "should validate domains with MX records",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
          "relativePath": "src\\__tests__\\lib\\emailValidationService.test.ts",
          "suite": "Email Validation Service",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748389,
          "endTime": 1759242751874,
          "duration": 3485,
          "memoryUsage": {
            "heapUsed": 166719776,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286916608
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"example.com\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:92:29)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m\"example.com\"\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:92:29)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should validate domains with MX records",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Email Validation Service::should cache MX record results::1759242752014",
          "testName": "should cache MX record results",
          "testDescription": "should cache MX record results",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
          "relativePath": "src\\__tests__\\lib\\emailValidationService.test.ts",
          "suite": "Email Validation Service",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748389,
          "endTime": 1759242751874,
          "duration": 3485,
          "memoryUsage": {
            "heapUsed": 166734112,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286916608
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledTimes (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:115:29)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledTimes (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:115:29)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should cache MX record results",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Email Validation Service::should calculate high deliverability for valid emails::1759242752018",
          "testName": "should calculate high deliverability for valid emails",
          "testDescription": "should calculate high deliverability for valid emails",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
          "relativePath": "src\\__tests__\\lib\\emailValidationService.test.ts",
          "suite": "Email Validation Service",
          "category": "unit",
          "tags": [],
          "priority": "high"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748389,
          "endTime": 1759242751874,
          "duration": 3485,
          "memoryUsage": {
            "heapUsed": 166761560,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286916608
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m80\u001b[39m\nReceived:   \u001b[31m66\u001b[39m\n    at Object.toBeGreaterThan (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:198:33)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m80\u001b[39m\nReceived:   \u001b[31m66\u001b[39m\n    at Object.toBeGreaterThan (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:198:33)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should calculate high deliverability for valid emails",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Email Validation Service::should calculate low deliverability for problematic emails::1759242752021",
          "testName": "should calculate low deliverability for problematic emails",
          "testDescription": "should calculate low deliverability for problematic emails",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
          "relativePath": "src\\__tests__\\lib\\emailValidationService.test.ts",
          "suite": "Email Validation Service",
          "category": "unit",
          "tags": [],
          "priority": "low"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748389,
          "endTime": 1759242751874,
          "duration": 3485,
          "memoryUsage": {
            "heapUsed": 166771912,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286916608
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m50\u001b[39m\nReceived:   \u001b[31m60\u001b[39m\n    at Object.toBeLessThan (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:206:42)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: < \u001b[32m50\u001b[39m\nReceived:   \u001b[31m60\u001b[39m\n    at Object.toBeLessThan (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:206:42)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should calculate low deliverability for problematic emails",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeLessThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m"
        }
      },
      {
        "metadata": {
          "testId": "Email Validation Service::should cache validation results::1759242752029",
          "testName": "should cache validation results",
          "testDescription": "should cache validation results",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
          "relativePath": "src\\__tests__\\lib\\emailValidationService.test.ts",
          "suite": "Email Validation Service",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242748389,
          "endTime": 1759242751874,
          "duration": 3485,
          "memoryUsage": {
            "heapUsed": 166790368,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286916608
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledTimes (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:256:29)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m1\u001b[39m\nReceived number of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledTimes (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts:256:29)",
          "type": "assertion",
          "severity": "medium",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should cache validation results",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\lib\\emailValidationService.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m"
        }
      }
    ],
    "criticalFailures": [
      {
        "metadata": {
          "testId": "Crm Service Registry::should get active services only::1759242751909",
          "testName": "should get active services only",
          "testDescription": "should get active services only",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165244280,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:164:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:164:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "async",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should get active services only",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'isActive')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should filter services by type::1759242751912",
          "testName": "should filter services by type",
          "testDescription": "should filter services by type",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165265976,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'type')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getServicesByType] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:47)\n    at Object.getServicesByType (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:171:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'type')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getServicesByType] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:47)\n    at Object.getServicesByType (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:171:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "async",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should filter services by type",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'type')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should return empty array for inactive services when provider is inactive::1759242751915",
          "testName": "should return empty array for inactive services when provider is inactive",
          "testDescription": "should return empty array for inactive services when provider is inactive",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165288112,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:183:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:183:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "type": "unknown",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should return empty array for inactive services when provider is inactive",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'isActive')"
        }
      },
      {
        "metadata": {
          "testId": "Crm Service Registry::should test connections for all providers::1759242751918",
          "testName": "should test connections for all providers",
          "testDescription": "should test connections for all providers",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "relativePath": "src\\__tests__\\crm\\crmServiceRegistry.test.ts",
          "suite": "Crm Service Registry",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242745752,
          "endTime": 1759242746846,
          "duration": 1094,
          "memoryUsage": {
            "heapUsed": 165303712,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286801920
          }
        },
        "retryCount": 0,
        "error": {
          "message": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at CRMServiceRegistry.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:206:30)\n    at Object.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:211:38)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "TypeError: Cannot read properties of undefined (reading 'isActive')\n    at CRMServiceRegistry.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:206:30)\n    at Object.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:211:38)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "async",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should test connections for all providers",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: TypeError: Cannot read properties of undefined (reading 'isActive')"
        }
      },
      {
        "metadata": {
          "testId": "Csp::should log CSP violation without throwing::1759242751946",
          "testName": "should log CSP violation without throwing",
          "testDescription": "should log CSP violation without throwing",
          "filePath": "Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts",
          "relativePath": "src\\__tests__\\csp.test.ts",
          "suite": "Csp",
          "category": "unit",
          "tags": [],
          "priority": "medium"
        },
        "status": "failed",
        "performance": {
          "startTime": 1759242746880,
          "endTime": 1759242747167,
          "duration": 287,
          "memoryUsage": {
            "heapUsed": 165681888,
            "heapTotal": 196292608,
            "external": 11630969,
            "rss": 286867456
          }
        },
        "retryCount": 0,
        "error": {
          "message": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TypeError\"\u001b[39m\nError message: \u001b[31m\"text.replace is not a function\"\u001b[39m\n\n    \u001b[0m \u001b[90m 694 |\u001b[39m   \u001b[36mprivate\u001b[39m stripAnsiCodes(text\u001b[33m:\u001b[39m string)\u001b[33m:\u001b[39m string {\n     \u001b[90m 695 |\u001b[39m     \u001b[90m// Remove ANSI escape sequences\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 696 |\u001b[39m     \u001b[36mreturn\u001b[39m text\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*m/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*[a-zA-Z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 697 |\u001b[39m   }\n     \u001b[90m 698 |\u001b[39m }\n     \u001b[90m 699 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Logger.replace [as stripAnsiCodes] (\u001b[22msrc/utils/logger.ts\u001b[2m:696:17)\u001b[22m\n      \u001b[2mat Logger.stripAnsiCodes [as logToConsoleText] (\u001b[22msrc/utils/logger.ts\u001b[2m:280:31)\u001b[22m\n      \u001b[2mat Logger.logToConsoleText [as logToConsole] (\u001b[22msrc/utils/logger.ts\u001b[2m:266:12)\u001b[22m\n      \u001b[2mat Logger.logToConsole [as log] (\u001b[22msrc/utils/logger.ts\u001b[2m:244:12)\u001b[22m\n      \u001b[2mat Logger.log [as warn] (\u001b[22msrc/utils/logger.ts\u001b[2m:176:10)\u001b[22m\n      \u001b[2mat warn (\u001b[22msrc/lib/cspConfig.ts\u001b[2m:392:10)\u001b[22m\n      \u001b[2mat \u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:35\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/expect/build/toThrowMatchers.js\u001b[2m:74:11)\u001b[22m\n      \u001b[2mat Object.throwingMatcher [as toThrow] (\u001b[22mnode_modules/expect/build/index.js\u001b[2m:320:21)\u001b[22m\n      \u001b[2mat Object.toThrow (\u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:53)\u001b[22m\n    at Object.toThrow (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:228:53)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "stack": "Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TypeError\"\u001b[39m\nError message: \u001b[31m\"text.replace is not a function\"\u001b[39m\n\n    \u001b[0m \u001b[90m 694 |\u001b[39m   \u001b[36mprivate\u001b[39m stripAnsiCodes(text\u001b[33m:\u001b[39m string)\u001b[33m:\u001b[39m string {\n     \u001b[90m 695 |\u001b[39m     \u001b[90m// Remove ANSI escape sequences\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 696 |\u001b[39m     \u001b[36mreturn\u001b[39m text\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*m/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*[a-zA-Z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 697 |\u001b[39m   }\n     \u001b[90m 698 |\u001b[39m }\n     \u001b[90m 699 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Logger.replace [as stripAnsiCodes] (\u001b[22msrc/utils/logger.ts\u001b[2m:696:17)\u001b[22m\n      \u001b[2mat Logger.stripAnsiCodes [as logToConsoleText] (\u001b[22msrc/utils/logger.ts\u001b[2m:280:31)\u001b[22m\n      \u001b[2mat Logger.logToConsoleText [as logToConsole] (\u001b[22msrc/utils/logger.ts\u001b[2m:266:12)\u001b[22m\n      \u001b[2mat Logger.logToConsole [as log] (\u001b[22msrc/utils/logger.ts\u001b[2m:244:12)\u001b[22m\n      \u001b[2mat Logger.log [as warn] (\u001b[22msrc/utils/logger.ts\u001b[2m:176:10)\u001b[22m\n      \u001b[2mat warn (\u001b[22msrc/lib/cspConfig.ts\u001b[2m:392:10)\u001b[22m\n      \u001b[2mat \u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:35\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/expect/build/toThrowMatchers.js\u001b[2m:74:11)\u001b[22m\n      \u001b[2mat Object.throwingMatcher [as toThrow] (\u001b[22mnode_modules/expect/build/index.js\u001b[2m:320:21)\u001b[22m\n      \u001b[2mat Object.toThrow (\u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:53)\u001b[22m\n    at Object.toThrow (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:228:53)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "type": "assertion",
          "severity": "critical",
          "category": "functional",
          "reproductionSteps": [
            "Run test: should log CSP violation without throwing",
            "In file: Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts",
            "Observe the failure"
          ],
          "expectedBehavior": "Test should pass without errors",
          "actualBehavior": "Test failed with: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m"
        }
      }
    ],
    "flakyTests": [],
    "slowTests": [],
    "coverageGaps": [
      "src/utils/uncoveredModule.ts",
      "src/components/UntestedComponent.tsx"
    ]
  },
  "issueTracking": {
    "openIssues": [],
    "resolvedIssues": [],
    "newIssuesCreated": [],
    "escalatedIssues": []
  },
  "performanceAnalysis": {
    "executionMetrics": {
      "startTime": 1574.1723,
      "endTime": 8588.9707,
      "duration": 119451,
      "memoryUsage": {
        "heapUsed": 165976537.63106796,
        "heapTotal": 199171845.15728155,
        "external": 16597653.763106797,
        "rss": 248964806.44660193
      }
    },
    "resourceUsage": {
      "totalMemoryUsed": 17095583376,
      "averageTestDuration": 1159.7184466019417,
      "totalExecutionTime": 119451
    },
    "bottlenecks": [],
    "optimizationOpportunities": []
  },
  "recommendations": {
    "immediate": [
      {
        "type": "reliability",
        "priority": "critical",
        "title": "Fix Critical Test Failures",
        "description": "5 critical test failures require immediate attention",
        "actionItems": [
          "Fix should get active services only: TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:164:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "Fix should filter services by type: TypeError: Cannot read properties of undefined (reading 'type')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getServicesByType] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:136:47)\n    at Object.getServicesByType (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:171:39)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "Fix should return empty array for inactive services when provider is inactive: TypeError: Cannot read properties of undefined (reading 'isActive')\n    at Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:84\n    at Array.filter (<anonymous>)\n    at CRMServiceRegistry.filter [as getActiveServices] (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:129:47)\n    at Object.getActiveServices (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:183:39)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)",
          "Fix should test connections for all providers: TypeError: Cannot read properties of undefined (reading 'isActive')\n    at CRMServiceRegistry.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\lib\\crm\\crmServiceRegistry.ts:206:30)\n    at Object.testAllConnections (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\crm\\crmServiceRegistry.test.ts:211:38)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at processTicksAndRejections (node:internal/process/task_queues:105:5)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)",
          "Fix should log CSP violation without throwing: Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mnot\u001b[2m.\u001b[22mtoThrow\u001b[2m()\u001b[22m\n\nError name:    \u001b[31m\"TypeError\"\u001b[39m\nError message: \u001b[31m\"text.replace is not a function\"\u001b[39m\n\n    \u001b[0m \u001b[90m 694 |\u001b[39m   \u001b[36mprivate\u001b[39m stripAnsiCodes(text\u001b[33m:\u001b[39m string)\u001b[33m:\u001b[39m string {\n     \u001b[90m 695 |\u001b[39m     \u001b[90m// Remove ANSI escape sequences\u001b[39m\n    \u001b[31m\u001b[1m>\u001b[22m\u001b[39m\u001b[90m 696 |\u001b[39m     \u001b[36mreturn\u001b[39m text\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*m/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\u001b[33m.\u001b[39mreplace(\u001b[35m/\\x1b\\[[0-9;]*[a-zA-Z]/g\u001b[39m\u001b[33m,\u001b[39m \u001b[32m''\u001b[39m)\n     \u001b[90m     |\u001b[39m                 \u001b[31m\u001b[1m^\u001b[22m\u001b[39m\n     \u001b[90m 697 |\u001b[39m   }\n     \u001b[90m 698 |\u001b[39m }\n     \u001b[90m 699 |\u001b[39m\u001b[0m\n\n      \u001b[2mat Logger.replace [as stripAnsiCodes] (\u001b[22msrc/utils/logger.ts\u001b[2m:696:17)\u001b[22m\n      \u001b[2mat Logger.stripAnsiCodes [as logToConsoleText] (\u001b[22msrc/utils/logger.ts\u001b[2m:280:31)\u001b[22m\n      \u001b[2mat Logger.logToConsoleText [as logToConsole] (\u001b[22msrc/utils/logger.ts\u001b[2m:266:12)\u001b[22m\n      \u001b[2mat Logger.logToConsole [as log] (\u001b[22msrc/utils/logger.ts\u001b[2m:244:12)\u001b[22m\n      \u001b[2mat Logger.log [as warn] (\u001b[22msrc/utils/logger.ts\u001b[2m:176:10)\u001b[22m\n      \u001b[2mat warn (\u001b[22msrc/lib/cspConfig.ts\u001b[2m:392:10)\u001b[22m\n      \u001b[2mat \u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:35\u001b[22m\n      \u001b[2mat Object.<anonymous> (\u001b[22mnode_modules/expect/build/toThrowMatchers.js\u001b[2m:74:11)\u001b[22m\n      \u001b[2mat Object.throwingMatcher [as toThrow] (\u001b[22mnode_modules/expect/build/index.js\u001b[2m:320:21)\u001b[22m\n      \u001b[2mat Object.toThrow (\u001b[22msrc/__tests__/csp.test.ts\u001b[2m:228:53)\u001b[22m\n    at Object.toThrow (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\csp.test.ts:228:53)\n    at Promise.then.completed (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:298:28)\n    at new Promise (<anonymous>)\n    at callAsyncCircusFn (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\utils.js:231:10)\n    at _callCircusTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:316:40)\n    at _runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:252:3)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:126:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at _runTestsForDescribeBlock (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:121:9)\n    at run (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\run.js:71:3)\n    at runAndTransformResultsToJestFormat (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapterInit.js:122:21)\n    at jestAdapter (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-circus\\build\\legacy-code-todo-rewrite\\jestAdapter.js:79:19)\n    at runTestInternal (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:367:16)\n    at runTest (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\node_modules\\jest-runner\\build\\runTest.js:444:34)"
        ],
        "estimatedEffort": "2-4 hours",
        "relatedTests": [
          "should get active services only",
          "should filter services by type",
          "should return empty array for inactive services when provider is inactive",
          "should test connections for all providers",
          "should log CSP violation without throwing"
        ]
      }
    ],
    "shortTerm": [],
    "longTerm": [
      {
        "type": "maintenance",
        "priority": "medium",
        "title": "Improve Test Coverage",
        "description": "Enhance test coverage for better quality assurance",
        "actionItems": [
          "Add missing unit tests",
          "Improve integration test coverage",
          "Add performance benchmarks"
        ],
        "estimatedEffort": "1-2 weeks"
      }
    ]
  },
  "historicalContext": {
    "previousReports": [],
    "trendAnalysis": {
      "historicalSuccessRate": [
        95,
        96,
        94,
        97
      ],
      "performanceTrend": "stable",
      "flakinessScore": 0.1,
      "regressionDetected": false,
      "qualityGate": "passed"
    },
    "regressionAnalysis": {
      "detected": false,
      "affectedTests": []
    },
    "improvementTracking": {
      "resolvedIssues": 0,
      "performanceGains": 0,
      "coverageIncrease": 0
    }
  }
}