{"timestamp":"2025-09-26T22:07:56.093Z","suite":"Health Monitor","testCase":"should handle health check failures","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"degraded\"\u001b[39m\nReceived: \u001b[31m\"unknown\"\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:99:31)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.099Z","suite":"Health Monitor","testCase":"should retry health checks on failure","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledTimes\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected number of calls: \u001b[32m3\u001b[39m\nReceived number of calls: \u001b[31m2\u001b[39m\n    at Object.toHaveBeenCalledTimes (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:115:31)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.103Z","suite":"Health Monitor","testCase":"should timeout health checks","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"degraded\"\u001b[39m\nReceived: \u001b[31m\"unknown\"\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:131:31)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.106Z","suite":"Health Monitor","testCase":"should create alerts for unhealthy services","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m\"un\u001b[7mhealthy\u001b[27m\"\u001b[39m\nReceived: \u001b[31m\"un\u001b[7mknown\u001b[27m\"\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:149:31)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.112Z","suite":"Health Monitor","testCase":"should resolve alerts when service recovers","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalled\u001b[2m()\u001b[22m\n\nExpected number of calls: >= \u001b[32m1\u001b[39m\nReceived number of calls:    \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalled (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:174:31)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.117Z","suite":"Health Monitor","testCase":"should create degraded alerts before critical alerts","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"alert\": ObjectContaining {\"serviceName\": \"test-service\", \"severity\": \"medium\"}}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:201:24)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.121Z","suite":"Health Monitor","testCase":"should evaluate overall system health","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32mObjectContaining {\"degradedCount\": 1, \"healthyCount\": 1, \"status\": \"unhealthy\", \"totalServices\": 3, \"unhealthyCount\": 1}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:243:31)\n    at runNextTicks (node:internal/process/task_queues:65:5)\n    at processTimers (node:internal/timers:520:9)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.125Z","suite":"Health Monitor","testCase":"should return all alerts including resolved ones","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBeGreaterThan\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: > \u001b[32m0\u001b[39m\nReceived:   \u001b[31m0\u001b[39m\n    at Object.toBeGreaterThan (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts:318:32)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\healthMonitor.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.132Z","suite":"Connection Manager","testCase":"should perform periodic health checks","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mjest.fn()\u001b[39m\u001b[2m).\u001b[22mtoHaveBeenCalledWith\u001b[2m(\u001b[22m\u001b[32m...expected\u001b[39m\u001b[2m)\u001b[22m\n\nExpected: \u001b[32m{\"id\": \"test-connection\"}\u001b[39m\n\nNumber of calls: \u001b[31m0\u001b[39m\n    at Object.toHaveBeenCalledWith (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\connectionManager.test.ts:157:31)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\connectionManager.test.ts","category":"assertion","severity":"medium","retryCount":0}}
{"timestamp":"2025-09-26T22:07:56.137Z","suite":"Connection Manager","testCase":"should remove unhealthy connections","error":"Error: \u001b[2mexpect(\u001b[22m\u001b[31mreceived\u001b[39m\u001b[2m).\u001b[22mtoBe\u001b[2m(\u001b[22m\u001b[32mexpected\u001b[39m\u001b[2m) // Object.is equality\u001b[22m\n\nExpected: \u001b[32m0\u001b[39m\nReceived: \u001b[31m1\u001b[39m\n    at Object.toBe (Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\connectionManager.test.ts:171:39)","metadata":{"file":"Q:\\_kyle\\temp_documents\\GitHub\\business_scraper\\src\\__tests__\\resilience\\connectionManager.test.ts","category":"assertion","severity":"medium","retryCount":0}}
