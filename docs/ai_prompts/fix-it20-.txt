Implement the following enhancement to the application.  Do the enhancement first.  Follow the Rules and Guidelines for the project.  Plan out you actions.  Work logically through the process.  Be sure to cover all of the instances where the enhancement alters the application.  Handle errors and fallback to seamless solutions.
Log each fix/enhancement as an Issue/Error on Github for the project with the required proper 'bug' documentation.
Be sure the Issue has the proper Assignees, Labels, bug, Something isn't working, critical, etc for the Issue.
If the changes are code related make sure the test cases run to 98% success.  After the resolution of the Issue, close the Issue on GitHub with the proper documentation.
enhancement:

Enhance Mock Reliability
Enhance the reliability of mocking throughout the business_scraper test suite. I need you to:

1. Standardize mocking patterns across all test files
2. Fix WebSocket and EventSource mocking issues causing connection test failures
3. Improve external service mocking (APIs, databases, third-party services)
4. Implement consistent mock cleanup between tests
5. Create reusable mock utilities and factories

Focus areas:
- WebSocket mocking for streaming functionality
- EventSource mocking for real-time updates
- Database connection mocking
- External API service mocking (Stripe, geocoding, etc.)
- File system and upload mocking

Create standardized mock patterns for:
- HTTP requests and responses
- Database operations
- Real-time connections
- File operations
- External service integrations

Ensure all mocks:
- Reset properly between tests
- Provide consistent behavior
- Support both success and error scenarios
- Are easily configurable for different test cases
- Don't leak state between test runs

The goal is to eliminate mock-related test failures and improve test reliability.